<Type Name="_NavigationFolder" FullName="Microsoft.Office.Interop.Outlook._NavigationFolder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47e7c5b285c6b771f04b5e51a758b7299228e1d8" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20633015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _NavigationFolder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _NavigationFolder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._NavigationFolder" />
  <TypeSignature Language="VB.NET" Value="Public Interface _NavigationFolder" />
  <TypeSignature Language="C++ CLI" Value="public interface class _NavigationFolder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630F2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。 仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。 否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。 有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Outlook.Application" />表示 Outlook application 对象的父对象。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" />常量，指示对象的类。 只读。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性返回的<b>olNavigationFolder</b><see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />对象。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 表示的显示名称<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />对象。 只读。</summary>
        <value>To be added.</value>
        <remarks>
          <para>使用<b>NavigationFolder.DisplayName</b>，而不是<see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.Name" />，以获取共享文件夹的名称。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Folder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.MAPIFolder Folder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.MAPIFolder Folder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Folder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Folder As MAPIFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::MAPIFolder ^ Folder { Microsoft::Office::Interop::Outlook::MAPIFolder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64452)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.MAPIFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Outlook.Folder" />对象，它代表与导航文件夹关联的共享或链接文件夹。 只读。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemovable">
      <MemberSignature Language="C#" Value="public bool IsRemovable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemovable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.IsRemovable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRemovable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRemovable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>布尔</b>值 (C# 中<b>bool</b> )，该值指示是否<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />可以从导航窗格中删除对象。 只读。</summary>
        <value>To be added.</value>
        <remarks>
          <para>可以从导航窗格中以编程方式删除仅共享或链接的文件夹。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64453)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64453)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置<b>Boolean</b>变量 (C# 中<b>bool</b> )，该值指示是否<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />显示选定对象。 为可读/写属性。</summary>
        <value>To be added.</value>
        <remarks>
          <para>日历导航模块中包含的导航文件夹的处理方式不同比其他导航模块中的导航文件夹。</para>如果活动浏览器使用天/周/月或天/周/月视图与自动预览视图来显示日历导航模块中的导航文件夹
          <para>，如果此属性返回<b>True</b>的导航文件夹签入导航窗格 （和是因此以-并行或重叠模式显示在活动资源管理器。)此属性设置为<b>False</b>不会显示在活动资源管理器删除日历。如果此属性多个 30 个导航文件夹设置为<b>True</b> ，则将出错。</para>如果活动浏览器使用另一个视图，如的所有约会视图中，以显示日历导航模块中的导航文件夹或在导航模块之外的日历导航模块中，如果此属性返回 True 的
          <para>导航选择文件夹并将其当前显示在活动资源管理器;否则，该属性返回 False。</para><para>在任一情况下，如果出现错误，父级中的所有<b>NavigationFolder</b>对象的此属性的值设置为<b>False</b><see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolders" />集合，或如果<b>NavigationFolder</b>对象包含其他导航模块与导航模块当前显示的导航窗格中。</para><para><see cref="E:Microsoft.Office.Interop.Outlook.NavigationGroupsEvents_12_Event.SelectedChange" />如果此属性的值更改为日历导航模块，而不考虑当前视图中的一个<b>NavigationFolder</b>对象引发事件的<b>NavigationFolders</b>集合的父级。</para><para /></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideBySide">
      <MemberSignature Language="C#" Value="public bool IsSideBySide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideBySide" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.IsSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSideBySide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSideBySide { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64454)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64454)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64454)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个<b>布尔</b>值 (C# 中<b>bool</b> )，指示是否<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />以-并行或重叠模式显示对象。 为可读/写属性。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性设置为<b>True</b>以-并排模式; 显示<b>NavigationFolder</b>否则，重叠模式用于在活动资源管理器的当前视图中显示的导航文件夹。此属性的默认值为<b>True</b>。</para>
          <para>设置该属性具有不与日历模块相关联的<b>NavigationFolder</b>对象没有影响。此属性的值是否与日历模块关联的<b>NavigationFolder</b>对象，它依赖于在以下条件：</para>
          <para>如果<see cref="P:Microsoft.Office.Interop.Outlook._NavigationFolder.IsSelected" /><b>NavigationFolder</b>对象的属性设置为<b>False</b>，则此直到<b>IsSelected</b>属性设置为<b>True</b>，则属性值无效。如果<b>IsSelected</b>属性设置为<b>True</b>，则该属性值时显示<b>NavigationFolder</b>应用。</para>
          <para>但是， <b>IsSideBySide</b>属性自动设置为<b>True</b>如果只有一个<b>NavigationFolder</b>的<b>IsSelected</b>属性与父项关联<see cref="T:Microsoft.Office.Interop.Outlook.CalendarModule" />对象设置为<b>True</b>。换句话说，如果<b>NavigationFolder</b>对象是仅在活动资源管理器的当前视图中显示的导航文件夹，然后一个<b>NavigationFolder</b>对象的<b>IsSideBySide</b>属性自动设置为<b>则返回 true</b>。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回指定对象的 <b>对象</b> 的父级。只读的。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64455)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64455)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回或设置一个<b>整数</b>值，表示的序号位置<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolder" />对象在导航窗格中显示时。 为可读/写属性。</summary>
        <value>To be added.</value>
        <remarks>
          <para>此属性仅可设置为介于 1 和值<see cref="P:Microsoft.Office.Interop.Outlook._NavigationFolders.Count" />属性父<see cref="T:Microsoft.Office.Interop.Outlook.NavigationFolders" />对象。如果您尝试将此属性设置为超出该范围的值，则将出错。</para>
          <para>更改此属性的值的一个<b>NavigationFolder</b>对象更改包含的<b>NavigationFolders</b>集合，具体取决于新值之间的相对更改其他导航文件夹<b>位置</b>值和<b>Position</b>属性<b>NavigationFolder</b>对象的原始值： </para>
          <list type="bullet">
            <item>
              <para>如果新值小于原始值，然后指定的<b>NavigationFolder</b>对象移到新位置，并将推送其他已经在或向下的新位置下方的导航文件夹。</para>
            </item>
            <item>
              <para>新值大于原始值，然后指定的<b>NavigationFolder</b>对象下移到新位置，并将其他导航文件夹推送旧的位置之间 up 的新位置，如果填充旧的位置。</para>
            </item>
          </list>
          <para>如果已从导航窗格中，删除了导航文件夹，则此属性返回-1，以指示导航文件夹不再是导航组的一部分。</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._NavigationFolder.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象的当前会话。 只读。</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <b>Session</b>属性和<see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />可以交替使用方法来获取当前会话的<b>NameSpace</b>对象。这两个成员的作用相同。例如，以下语句对执行相同的功能：</para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>