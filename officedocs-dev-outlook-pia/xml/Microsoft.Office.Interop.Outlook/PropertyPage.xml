<Type Name="PropertyPage" FullName="Microsoft.Office.Interop.Outlook.PropertyPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48f2f3f7d91d2193670d3d00ba2f1e1b6f744750" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27897596" /></Metadata><TypeSignature Language="C#" Value="public interface PropertyPage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract PropertyPage" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.PropertyPage" />
  <TypeSignature Language="VB.NET" Value="Public Interface PropertyPage" />
  <TypeSignature Language="C++ CLI" Value="public interface class PropertyPage" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006307E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示选项对话框或文件夹的属性对话框中的一个自定义属性页面。</summary>
    <remarks><para>Outlook 使用此对象允许自定义属性页面与对话框中的 "应用"按钮进行交互。</para>
      <para><b>PropertyPage</b>对象是一个抽象对象。 即 Microsoft Outlook 对象库中的<b>PropertyPage</b>对象不包含实现代码。 相反，它作为模板，可帮助您在 Microsoft Visual Basic 中实现对象。 这提供了一组预定义的 Outlook 可使用以确定是否已更改自定义属性页并通知用户，单击确定按钮的应用程序的接口。 （如果您的自定义属性页不依赖于应用按钮，然后您不需要实现<b>PropertyPage</b>对象。）</para>
      <para>自定义属性页是一个 ActiveX 控件，当用户单击自定义属性页上的选项卡上由 Outlook 或文件夹的属性对话框中选项对话框显示。若要在 Visual Basic.NET 中实现<b>PropertyPage</b>对象，包含的实现代码的模块必须包含以下 Implements 语句。</para>
      <code>Implements Outlook.PropertyPage</code>
      <para>该模块还必须包含实现的属性和方法的 <b>属性页</b> 对象的过程。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.PropertyPage.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>应用在自定义属性页上所做的更改。</summary>
        <remarks><para>因为<see cref="T:Microsoft.Office.Interop.Outlook.PropertyPage" />是一个抽象对象，它实现应用程序中 （而不是通过 Microsoft Outlook 本身），实现的<b>应用</b>方法类似于在程序代码中的事件过程。 就是您编写的代码相同的方式编写事件过程在很大程度实现该方法。 换句话说，Outlook 调用 <b>Apply</b> 方法来通知程序: 用户已经在显示要求程序应用由用户更改的属性值的自定义属性页的对话框中采取动作。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public bool Dirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.PropertyPage.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个<b>布尔</b>(C# 中<b>bool</b> ) 值，如果已更改自定义属性页的内容为<b>True</b> 。 实现的 ActiveX 控件<see cref="T:Microsoft.Office.Interop.Outlook.PropertyPage" />对象设置此属性的值和 Microsoft Outlook 会查询此响应<see cref="M:Microsoft.Office.Interop.Outlook.PropertyPageSite.OnStatusChange" />方法<see cref="T:Microsoft.Office.Interop.Outlook.PropertyPageSite" />对象。 此为只读属性。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageInfo">
      <MemberSignature Language="C#" Value="public void GetPageInfo (out string HelpFile, out int HelpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPageInfo([out] string&amp; HelpFile, [out] int32&amp; HelpContext) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.PropertyPage.GetPageInfo(System.String@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetPageInfo (ByRef HelpFile As String, ByRef HelpContext As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetPageInfo([Runtime::InteropServices::Out] System::String ^ % HelpFile, [Runtime::InteropServices::Out] int % HelpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="HelpContext" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="HelpFile">指定与属性页相关的帮助文件。</param>
        <param name="HelpContext">指定与属性页相关的帮助主题的上下文 ID。</param>
        <summary>返回有关自定义属性页的帮助信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>