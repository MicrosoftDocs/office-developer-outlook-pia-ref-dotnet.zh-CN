<Type Name="Conflicts" FullName="Microsoft.Office.Interop.Outlook.Conflicts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3504a30b96a752a815c2c8ae8507b8f75ba9590f" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139467" /></Metadata><TypeSignature Language="C#" Value="public interface Conflicts : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Conflicts implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Conflicts" />
  <TypeSignature Language="VB.NET" Value="Public Interface Conflicts&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Conflicts : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630C2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f63a2-101">包含一组对象，这些对象代表Outlook特定项目存在冲突的所有 Microsoft Outlook <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 项。</span><span class="sxs-lookup"><span data-stu-id="f63a2-101">Contains a collection of <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> objects that represent all Microsoft Outlook items that are in conflict with a particular Outlook item.</span></span></summary>
    <remarks><para><span data-ttu-id="f63a2-102">使用 <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Conflicts" /> 任意项目（Outlook）的 属性 <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" /> 可返回<b>Conflicts</b>对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-102">Use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Conflicts" /> property of any Outlook item, such as <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" />, to return the <b>Conflicts</b> object.</span></span></para>
      <para><span data-ttu-id="f63a2-103">使用 <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" /> <b>Conflicts</b> 对象的 属性可确定项目是否涉及冲突。</span><span class="sxs-lookup"><span data-stu-id="f63a2-103">Use the <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" /> property of the <b>Conflicts</b> object to determine if the item is involved in a conflict.</span></span> <span data-ttu-id="f63a2-104">非零值表示有冲突。</span><span class="sxs-lookup"><span data-stu-id="f63a2-104">A non-zero value indicates conflict.</span></span></para>
      <para><span data-ttu-id="f63a2-105">使用 <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" /> 属性 <b> (，C#) </b> 从 <b>Conflicts</b> 集合对象中检索特定的冲突项目。</span><span class="sxs-lookup"><span data-stu-id="f63a2-105">Use the <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" /> property (<b>this</b> in C#)to retrieve a particular conflict item from the <b>Conflicts</b> collection object.</span></span></para>
      <para><span data-ttu-id="f63a2-106">使用 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> 、 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> 、 和 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> 方法遍历 <b>Conflicts</b> 集合。</span><span class="sxs-lookup"><span data-stu-id="f63a2-106">Use the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> methods to traverse the <b>Conflicts</b> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63a2-107">返回 <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> 一个对象，该对象Outlook父应用程序。</span><span class="sxs-lookup"><span data-stu-id="f63a2-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="f63a2-108">只读。</span><span class="sxs-lookup"><span data-stu-id="f63a2-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63a2-109">返回 <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> 一个常量，该常量指示对象的类。</span><span class="sxs-lookup"><span data-stu-id="f63a2-109">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="f63a2-110">只读。</span><span class="sxs-lookup"><span data-stu-id="f63a2-110">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63a2-111">返回一<b> (</b><b>整数</b>C#) 整数值，该值指示指定集合中的对象数。</span><span class="sxs-lookup"><span data-stu-id="f63a2-111">Returns an <b>Integer</b> (<b>int</b> in C#) value indicating the count of objects in the specified collection.</span></span> <span data-ttu-id="f63a2-112">只读。</span><span class="sxs-lookup"><span data-stu-id="f63a2-112">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirst">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetFirst() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirst () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63a2-113">返回集合中的第一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-113">Returns the first object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="f63a2-114">一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 个代表集合中包含的第一个对象的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-114">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the first object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="f63a2-115">如果不存在第一个对象，则返回<b>Nothing，</b>例如，如果集合中不存在对象。若要确保<b>GetFirst</b>、、 和 方法在大型集合中正确操作，请调用 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b>GetFirst，</b>然后再调用该集合上的<b>GetNext，</b>在调用<b>GetPrevious</b>之前调用<b>GetLast。</b></span><span class="sxs-lookup"><span data-stu-id="f63a2-115">Returns <b>Nothing</b> if no first object exists, for example, if there are no objects in the collection.To ensure correct operation of the <b>GetFirst</b>, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="f63a2-116">要确保您始终在同一集合下生成的调用，请创建引用在进入循环前该集合的显式变量。</span><span class="sxs-lookup"><span data-stu-id="f63a2-116">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetLast() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLast () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63a2-117">返回集合中的最后一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-117">Returns the last object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="f63a2-118">一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 个代表集合中包含的最后一个对象的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-118">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the last object contained by the collection.</span></span></returns>
        <remarks><para> <span data-ttu-id="f63a2-119">如果不存在<b>最后</b>一个对象（例如，如果集合为空，则返回 Nothing）。若要确保正确操作大型集合中的 、GetLast 、 和 方法，请先调用 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> <b></b> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b>GetFirst，</b>然后再对集合调用<b>GetNext，</b>在调用<b>GetPrevious</b>之前调用<b>GetLast。</b></span><span class="sxs-lookup"><span data-stu-id="f63a2-119">It returns <b>Nothing</b> if no last object exists, for example, if the collection is empty.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <b>GetLast</b>, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="f63a2-120">要确保您始终在同一集合下生成的调用，请创建引用在进入循环前该集合的显式变量。</span><span class="sxs-lookup"><span data-stu-id="f63a2-120">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNext () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(87)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63a2-121">返回集合中的下一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-121">Returns the next object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="f63a2-122">一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 个代表集合中包含的下一个对象的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-122">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the next object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="f63a2-123">如果不存在下一个对象，则返回<b>Nothing，</b>例如，如果已位于集合的末尾。若要确保大集合中 、 、 GetNext 和 方法的正确操作，请先调用 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <b></b> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b>GetFirst，</b>然后再对集合调用<b>GetNext，</b>在调用<b>GetPrevious</b>之前调用<b>GetLast。</b></span><span class="sxs-lookup"><span data-stu-id="f63a2-123">It returns <b>Nothing</b> if no next object exists, for example, if already positioned at the end of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <b>GetNext</b>, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="f63a2-124">要确保您始终在同一集合下生成的调用，请创建引用在进入循环前该集合的显式变量。</span><span class="sxs-lookup"><span data-stu-id="f63a2-124">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetPrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrevious () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetPrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(89)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f63a2-125">返回集合中的上一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> 个对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-125">Returns the previous object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="f63a2-126">一 <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 个代表集合包含的上一个对象的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-126">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the previous object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="f63a2-127">如果前一个对象不存在，则返回<b>Nothing，</b>例如，如果已位于集合的开头。若要确保大型集合中 、 、 和 GetPrevious 方法的正确操作，请先调用 <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <b>GetFirst，</b>然后再对集合<b></b>调用<b>GetNext，</b>在调用<b>GetPrevious</b>之前调用<b>GetLast。</b></span><span class="sxs-lookup"><span data-stu-id="f63a2-127">It returns <b>Nothing</b> if no previous object exists, for example, if already positioned at the beginning of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <b>GetPrevious</b> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="f63a2-128">要确保您始终在同一集合下生成的调用，请创建引用在进入循环前该集合的显式变量。</span><span class="sxs-lookup"><span data-stu-id="f63a2-128">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Conflict Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Conflict ^ default[System::Object ^] { Microsoft::Office::Interop::Outlook::Conflict ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f63a2-129">或者是对象的索引号，或者是用于匹配集合中某个对象的默认属性的值。</span><span class="sxs-lookup"><span data-stu-id="f63a2-129">Either the index number of the object, or a value used to match the default property of an object in the collection.</span></span></param>
        <summary><span data-ttu-id="f63a2-130">从 <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> 集合中返回一个对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-130">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object from the collection.</span></span></summary>
        <value><span data-ttu-id="f63a2-131"><b>冲突</b> 对象，该对象代表指定的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-131">A <b>Conflict</b> object that represents the specified object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63a2-p109">返回指定对象的 <b>对象</b> 的父级。只读的。</span><span class="sxs-lookup"><span data-stu-id="f63a2-p109">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f63a2-134">返回 <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  当前会话的对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-134">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="f63a2-135">只读。</span><span class="sxs-lookup"><span data-stu-id="f63a2-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="f63a2-136"><b>Session</b>属性和 <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> 方法可以互换为当前会话获取<b>NameSpace</b>对象。</span><span class="sxs-lookup"><span data-stu-id="f63a2-136">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="f63a2-137">这两个成员可以实现同一目的。</span><span class="sxs-lookup"><span data-stu-id="f63a2-137">Both members serve the same purpose.</span></span> <span data-ttu-id="f63a2-138">例如，以下语句对执行相同的功能：</span><span class="sxs-lookup"><span data-stu-id="f63a2-138">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>