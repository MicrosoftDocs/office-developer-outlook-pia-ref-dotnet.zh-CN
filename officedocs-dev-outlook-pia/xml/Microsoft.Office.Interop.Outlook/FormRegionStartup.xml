<Type Name="FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook.FormRegionStartup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fe37b575ca3085d285e455a40874a21c74c8347" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902094" /></Metadata><TypeSignature Language="C#" Value="public interface FormRegionStartup : Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FormRegionStartup implements class Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface FormRegionStartup&#xA;Implements _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class FormRegionStartup : Microsoft::Office::Interop::Outlook::_FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._FormRegionStartup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.FormRegionStartupClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义接口，该接口允许加载项指定窗体区域的存储区和用户界面、获取该窗体区域的对象并确定何时在窗体或阅读窗格中显示该窗体区域。</summary>
    <remarks><para>这是.NET 接口派生的互操作性与相应的 COM 对象的托管代码需要 COM coclass。 使用此派生的接口访问 COM 对象的所有方法、 属性和事件的成员。 但是，如果方法或想要使用的事件共享相同的名称相同的 COM 对象下，强制转换为相应的主接口调用方法，并强制转换为最新的事件接口，连接到该事件。 请参阅本主题的 COM 对象有关的信息。 有关 COM 对象的方法和属性成员的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />。 </para>
      <para><b>FormRegionStartup</b> 接口是抽象类，这意味着它不能直接实例。 在 Visual Basic 中，您可以使用<b>Implements</b>关键字，如下所示在外接程序类中提供的<b>FormRegionStartup</b>方法：</para>
      <code>Implements Outlook._FormRegionStartup.BeforeFormRegionShow</code>
      <para>部署客户端计算机上的 Outlook 窗体中窗体区域的外接程序必须实现<b>FormRegionStartup</b>接口包含两种方法，<see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />和<see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />。 当 Outlook 加载外接程序时，Outlook 将查询 <b>FormRegionStartup</b> <b>IDTExtensibility2</b> 接口。 </para>
      <para>外接程序指示在<b>GetFormRegionStorage</b>窗体区域的存储和布局文件。 通过调用 <b>GetFormRegionStorage</b> ，Outlook 分配存储和计算窗体区域的布局，实例化一个对象，用于窗体区域，并返回一个值，表示分配给外接程序的存储。 如果成功<b>GetFormRegionStorage</b> ，只需在检查器窗口中或阅读窗格中显示窗体区域之前 Outlook 将调用<b>BeforeFormRegionShow</b>并传递<see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />对象的外接程序的窗体区域。 外接程序使用此商机窗体区域显示更新窗体区域中的任何控件之前。 </para>
      <para>当加载项关闭窗体区域的框架时，加载项必须释放窗体区域的对象。</para>
      <para>编写外接程序窗体区域的详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87930">扩展窗体区域与外接程序</a><b>FormRegionStartup</b>，请参阅 MSDN 上的代码示例下载。</para>
      <para> </para></remarks>
  </Docs>
  <Members />
</Type>