<Type Name="_Categories" FullName="Microsoft.Office.Interop.Outlook._Categories">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea42ac39cad667a54dbf4c84adf7f13ad84a7dd4" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902129" /></Metadata><TypeSignature Language="C#" Value="public interface _Categories : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Categories implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Categories" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Categories&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Categories : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630E4-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8ed0a-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="8ed0a-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="8ed0a-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="8ed0a-104">有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.Categories" />。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Categories" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Category Add (string Name, object Color, object ShortcutKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Category Add([in]string Name, [in]object Color, [in]object ShortcutKey) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Categories.Add(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Optional Color As Object, Optional ShortcutKey As Object) As Category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(95)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Category</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="8ed0a-105">新类别的名称。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-105">The name of the new category.</span></span></param>
        <param name="Color"><span data-ttu-id="8ed0a-106">新类别的颜色。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-106">The color for the new category.</span></span> <span data-ttu-id="8ed0a-107">如果未不指定任何值，将新类别设置为第一种颜色 (指定的顺序<see cref="T:Microsoft.Office.Interop.Outlook.OlCategoryColor" />枚举) 即至少使用，也就是说，如果未使用的颜色，则新类别设置为<b>OlCategoryColor</b>中的第一个未使用颜色枚举。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-107">If no value is specified, the new category is set to the first color (as specified in the order of the <see cref="T:Microsoft.Office.Interop.Outlook.OlCategoryColor" /> enumeration) that is the least used, That is, if there are unused colors, the new category is set to the first unused color in the <b>OlCategoryColor</b> enumeration.</span></span> <span data-ttu-id="8ed0a-108">如果使用过 <b>OlCategoryColor</b>枚举中的所有颜色，然后新类别设置为第一种颜色，则都使用 <b>OlCategoryColor</b>枚举中最低。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-108">If all colors in the <b>OlCategoryColor</b> enumeration have been used, then the new category is set to the first color that is used least in the <b>OlCategoryColor</b> enumeration.</span></span></param>
        <param name="ShortcutKey"><span data-ttu-id="8ed0a-p103">新类别的快捷键。如果未不指定任何值，则默认值是 <b>OlCategoryShortcutKeyNone</b> 。 </span><span class="sxs-lookup"><span data-stu-id="8ed0a-p103">The shortcut key for the new category. If no value is specified, the default value is <b>OlCategoryShortcutKeyNone</b>.</span></span></param>
        <summary><span data-ttu-id="8ed0a-111">创建一个新<see cref="T:Microsoft.Office.Interop.Outlook.Category" />对象，并将其追加<see cref="T:Microsoft.Office.Interop.Outlook.Categories" />集合。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-111">Creates a new <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> object and appends it to the <see cref="T:Microsoft.Office.Interop.Outlook.Categories" /> collection.</span></span></summary>
        <returns><span data-ttu-id="8ed0a-112">表示新类别的 <b>类别</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-112">A <b>Category</b> object that represents the new category.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ed0a-113">返回<see cref="T:Microsoft.Office.Interop.Outlook.Application" />表示 Outlook application 对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-113">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="8ed0a-114">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-114">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ed0a-115">返回<see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" />常量，指示对象的类。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="8ed0a-116">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ed0a-117">返回指示数目的<b>整数</b>(C# 中<b>int</b> ) 值<see cref="T:Microsoft.Office.Interop.Outlook.Category" />指定集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-117">Returns an <b>Integer</b> (<b>int</b> in C#) value indicating the count of <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> objects in the specified collection.</span></span> <span data-ttu-id="8ed0a-118">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-118">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Category this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Category Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Category" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Category ^ default[System::Object ^] { Microsoft::Office::Interop::Outlook::Category ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Category</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8ed0a-119"><b>整数</b>(C# 中<b>int</b> ) 值，表示对象的索引号或<b>字符串</b>（C# 中的<b>字符串</b>） 值，代表之一<see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" />或<see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" />集合中对象的属性值。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-119">Either an <b>Integer</b> (<b>int</b> in C#) value representing the index number of the object, or a <b>String</b> (<b>string</b> in C#) value representing either the <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> or <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> property value of an object in the collection.</span></span></param>
        <summary><span data-ttu-id="8ed0a-120">返回<see cref="T:Microsoft.Office.Interop.Outlook.Category" />对象的集合。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-120">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> object from the collection.</span></span></summary>
        <value><span data-ttu-id="8ed0a-121">表示指定的对象的 <b>类别</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-121">A <b>Category</b> object that represents the specified object.</span></span></value>
        <remarks><para><span data-ttu-id="8ed0a-122">如果在指定类别的名称，则<paramref name="Index" />，此方法返回与指定的值匹配的第一个<b>Category</b>对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-122">If the name of a category  is specified in <paramref name="Index" />, this method returns the first <b>Category</b> object that matches the specified value.</span></span> <span data-ttu-id="8ed0a-123">如果找不到匹配项，该方法返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#）</span><span class="sxs-lookup"><span data-stu-id="8ed0a-123">If a match cannot be found, the method returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#)</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ed0a-p108">返回指定对象的 <b>对象</b> 的父级。只读的。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-p108">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Categories.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(82)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="8ed0a-126"><b>整数</b>(C# 中<b>int</b> ) 值，表示对象的索引号或<b>字符串</b>（C# 中的<b>字符串</b>） 值，代表之一<see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" />或<see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" />集合中对象的属性值。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-126">Either an <b>Integer</b> (<b>int</b> in C#) value representing the index number of the object, or a <b>String</b> (<b>string</b> in C#) value representing either the <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> or <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> property value of an object in the collection.</span></span></param>
        <summary><span data-ttu-id="8ed0a-127">从集合中删除对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-127">Removes an object from the collection.</span></span></summary>
        <remarks><para><span data-ttu-id="8ed0a-128">如果在指定类别的名称，则<paramref name="Index" />，此方法删除与指定的值匹配的第一个<b>Category</b>对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-128">If the name of a category  is specified in <paramref name="Index" />, this method removes the first <b>Category</b> object that matches the specified value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ed0a-129">返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象的当前会话。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-129">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="8ed0a-130">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-130">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8ed0a-131"><b>Session</b>属性和<see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />可以交替使用方法来获取当前会话的<b>NameSpace</b>对象。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-131">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="8ed0a-132">这两个成员可以实现同一目的。</span><span class="sxs-lookup"><span data-stu-id="8ed0a-132">Both members serve the same purpose.</span></span> <span data-ttu-id="8ed0a-133">例如，以下语句对执行相同的功能：</span><span class="sxs-lookup"><span data-stu-id="8ed0a-133">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
