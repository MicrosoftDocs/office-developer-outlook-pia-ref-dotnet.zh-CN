<Type Name="AppointmentItem" FullName="Microsoft.Office.Interop.Outlook.AppointmentItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfb07f19af13b577e521c3dd5c487e46f23c189d" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20632544" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface AppointmentItem : Microsoft.Office.Interop.Outlook._AppointmentItem, Microsoft.Office.Interop.Outlook.ItemEvents_10_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract AppointmentItem implements class Microsoft.Office.Interop.Outlook._AppointmentItem, class Microsoft.Office.Interop.Outlook.ItemEvents_10_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface AppointmentItem&#xA;Implements _AppointmentItem, ItemEvents_10_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class AppointmentItem : Microsoft::Office::Interop::Outlook::_AppointmentItem, Microsoft::Office::Interop::Outlook::ItemEvents_10_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._AppointmentItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook.ItemEvents_10_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.AppointmentItemClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063033-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ae5f4-101">代表“日历”文件夹中的会议、一次性约会、定期约会或会议。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae5f4-101">Represents a meeting, a one-time appointment, or a recurring appointment or meeting in the Calendar folder.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="ae5f4-102">
        <para>这是.NET 接口派生的互操作性与相应的 COM 对象的托管代码需要 COM coclass。使用此派生的接口访问 COM 对象的所有方法、 属性和事件的成员。但是，如果方法或想要使用的事件共享相同的名称相同的 COM 对象下，强制转换为相应的主接口调用方法，并强制转换为最新的事件接口，连接到该事件。请参阅本主题的 COM 对象有关的信息。有关 COM 对象的方法和属性成员的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook._AppointmentItem" />。有关 COM 对象的事件成员的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.ItemEvents_10_Event" />。</para>
        <para>使用<see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />方法创建一个表示新约会的<b>AppointmentItem</b>对象。</para>
        <para>使用<see cref="P:Microsoft.Office.Interop.Outlook._Items.Item(System.Object)" />(<paramref name="index" />)，其中<paramref name="index" />是约会或用来匹配的默认属性为约会，从日历文件夹中返回单个<b>AppointmentItem</b>对象的值的索引号。</para>
        <para>还可以返回<b>AppointmentItem</b>对象从<see cref="T:Microsoft.Office.Interop.Outlook.MeetingItem" />对象使用<see cref="M:Microsoft.Office.Interop.Outlook._MeetingItem.GetAssociatedAppointment(System.Boolean)" />方法。</para>
        <para>使用定期约会项目时，您应释放以前的任何引用，获取新引用的定期约会项目之前您访问或修改项目，并只要您完成和已保存版本这些引用更改。这种做法应用于定期<b>AppointmentItem</b>对象，以及任何<see cref="T:Microsoft.Office.Interop.Outlook.Exception" />或<see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" />对象。若要解除对 Visual Basic 中的，设置为<b>Nothing</b>的现有对象。C# 中明确释放该对象的内存。</para>
        <para>注意，即使在释放您引用和尝试获取新的引用，如果仍没有活动的参考资料，由另一个加载项或 Outlook 中的，为上述对象，之一，则后您新参考仍指向的过期的副本对象。因此，很重要，只要您已完成的定期约会释放您的引用。</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ae5f4-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._AppointmentItem" />. For information about the event members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.ItemEvents_10_Event" />.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />  method to create an <b>AppointmentItem</b> object that represents a new appointment.</para>
          <para>Use <see cref="P:Microsoft.Office.Interop.Outlook._Items.Item(System.Object)" /> (<paramref name="index" />), where <paramref name="index" /> is the index number of an appointment or a value used to match the default property of an appointment, to return a single <b>AppointmentItem</b> object from a Calendar folder.</para>
          <para>You can also return an <b>AppointmentItem</b> object from a <see cref="T:Microsoft.Office.Interop.Outlook.MeetingItem" />  object by using the <see cref="M:Microsoft.Office.Interop.Outlook._MeetingItem.GetAssociatedAppointment(System.Boolean)" />  method.</para>
          <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <b>AppointmentItem</b> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
          <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>