<Type Name="_Store" FullName="Microsoft.Office.Interop.Outlook._Store">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f2239ab127f9c76011dbb664fdfb2aec7a1918e" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27899003" /></Metadata><TypeSignature Language="C#" Value="public interface _Store" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Store" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Store" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Store" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Store" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630C7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6cb5a-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="6cb5a-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="6cb5a-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="6cb5a-104">有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.Store" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Store" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-105">返回<see cref="T:Microsoft.Office.Interop.Outlook.Application" />表示 Outlook application 对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="6cb5a-106">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-106">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Categories Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Categories Categories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As Categories" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Categories ^ Categories { Microsoft::Office::Interop::Outlook::Categories ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64421)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Categories</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-107">返回<see cref="T:Microsoft.Office.Interop.Outlook.Categories" />集合，代表所有类别定义的<see cref="T:Microsoft.Office.Interop.Outlook.Store" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-107">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Categories" /> collection that represents all of the categories that are defined for the <see cref="T:Microsoft.Office.Interop.Outlook.Store" />.</span></span> <span data-ttu-id="6cb5a-108">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-109">此属性是类似于<see cref="P:Microsoft.Office.Interop.Outlook._NameSpace.Categories" />属性<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象，只不过此属性适用于会话配置文件指定一个或多个帐户，并指定帐户相关联，存储的类别，而<b>类别</b> <b>NameSpace</b>对象的属性应用于定义只有一个帐户，并指定该会话的主类别列表的会话配置文件。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-109">This property is similar to the <see cref="P:Microsoft.Office.Interop.Outlook._NameSpace.Categories" /> property of the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> object, except that the this property applies to a session profile that specifies one or more accounts and specifies the categories for the store that an account is associated with, whereas the <b>Categories</b> property of the <b>NameSpace</b> object applies to a session profile that defines only one account, and specifies the Master Category List for that session.</span></span></para>
          <para><span data-ttu-id="6cb5a-p104">对于 IMAP 存储区如某些辅助传递存储区，则 <b>类别</b> 属性返回主存储区的 <b>类别</b> 集合。IMAP 存储区实际上不支持单独的类别集合。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p104">For certain secondary delivery stores such as an IMAP store, the <b>Categories</b> property returns the <b>Categories</b> collection for the primary store. IMAP stores do not actually support a separate categories collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-112">返回<see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" />常量，指示对象的类。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-112">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="6cb5a-113">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-113">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-114">返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 表示的显示名称<see cref="T:Microsoft.Office.Interop.Outlook.Store" />对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-114">Returns a <b>String</b> (<b>string</b> in C#) representing the display name of the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> object.</span></span> <span data-ttu-id="6cb5a-115">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-115">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-p107">
            <b>显示名称</b> 是 <b>存储</b> 对象的默认属性。此属性对应于 MAPI 属性， <b>PidTagDisplayName</b> 。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p107">
            <b>DisplayName</b> is the default property of the <b>Store</b> object. This property corresponds to the MAPI property, <b>PidTagDisplayName</b>. </span></span></para>
          <para><span data-ttu-id="6cb5a-118">
            <b>显示名称</b> 是只读的。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-118">
            <b>DisplayName</b> is read-only.</span></span> <span data-ttu-id="6cb5a-119">若要更改<b>DisplayName</b>个人文件夹文件 (.pst)，请使用<see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" />对象和<see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperty(System.String,System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-119">To change the <b>DisplayName</b> of a Personal Folders File (.pst), use the <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> object and the <see cref="M:Microsoft.Office.Interop.Outlook._PropertyAccessor.SetProperty(System.String,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExchangeStoreType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlExchangeStoreType ExchangeStoreType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlExchangeStoreType ExchangeStoreType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.ExchangeStoreType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExchangeStoreType As OlExchangeStoreType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlExchangeStoreType ExchangeStoreType { Microsoft::Office::Interop::Outlook::OlExchangeStoreType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64218)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlExchangeStoreType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-120">返回中的一个常量<see cref="T:Microsoft.Office.Interop.Outlook.OlExchangeStoreType" />指示 Exchange 存储的类型的枚举。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-120">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Outlook.OlExchangeStoreType" /> enumeration that indicates the type of an Exchange store.</span></span> <span data-ttu-id="6cb5a-121">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-122"><b>ExchangeStoreType</b> 属性区分不同的 Exchange 存储区类型，如主 Exchange 邮箱、 Exchange 邮箱、 公用文件夹存储或非 Exchange 存储中。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-122">The <b>ExchangeStoreType</b> property distinguishes among different Exchange store types, such as primary Exchange mailbox, Exchange mailbox, Public Folder store, or non-Exchange store.</span></span> <span data-ttu-id="6cb5a-123">此属性在每种类型的存储包括 Hotmail、 HTTP、 IMAP 和等之间没有区别。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-123">This property does not distinguish among every type of store including Hotmail, HTTP, IMAP, and so forth.</span></span> <span data-ttu-id="6cb5a-124">使用<see cref="P:Microsoft.Office.Interop.Outlook._Account.AccountType" />类型的电子邮件帐户，如 Exchange、 HTTP、 IMAP 或 POP3 相关联的服务器。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-124">Use <see cref="P:Microsoft.Office.Interop.Outlook._Account.AccountType" /> for the type of server associated with an e-mail account, such as Exchange, HTTP, IMAP, or  POP3.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64221)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64221)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-125">返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 个人文件夹文件 (.pst) 或脱机文件夹文件 (.ost) 存储中表示的完整文件路径。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-125">Returns a <b>String</b> (<b>string</b> in C#) representing the full file path for a Personal Folders File (.pst) or an Offline Folder File (.ost) store.</span></span> <span data-ttu-id="6cb5a-126">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-126">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-p112">此属性支持 Exchange 和非 Exchange 存储。如果商店不是.pst 或.ost 存储， <b>文件路径</b> 将返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p112">This property supports both Exchange and non-Exchange stores. If the store is not a .pst or .ost store, <b>FilePath</b> returns an empty string.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.MAPIFolder GetDefaultFolder (Microsoft.Office.Interop.Outlook.OlDefaultFolders FolderType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.MAPIFolder GetDefaultFolder([in]valuetype Microsoft.Office.Interop.Outlook.OlDefaultFolders FolderType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.GetDefaultFolder(Microsoft.Office.Interop.Outlook.OlDefaultFolders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultFolder (FolderType As OlDefaultFolders) As MAPIFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::MAPIFolder ^ GetDefaultFolder(Microsoft::Office::Interop::Outlook::OlDefaultFolders FolderType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.MAPIFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FolderType" Type="Microsoft.Office.Interop.Outlook.OlDefaultFolders" />
      </Parameters>
      <Docs>
        <param name="FolderType"><span data-ttu-id="6cb5a-129">指定所请求默认文件夹的类型。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-129">Specifies the type of the requested default folder.</span></span></param>
        <summary><span data-ttu-id="6cb5a-130">返回<see cref="T:Microsoft.Office.Interop.Outlook.MAPIFolder" />对象的代表存储区中的默认文件夹且由指定的类型的<paramref name="FolderType" />参数。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-130">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.MAPIFolder" /> object that represents the default folder in the store and that is of the type specified by the <paramref name="FolderType" /> argument.</span></span></summary>
        <returns><span data-ttu-id="6cb5a-131">返回一个代表所请求的类型的默认文件夹的<b>Folder</b>对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-131">Returns a <b>Folder</b> object that represents the default folder of the requested type.</span></span> <span data-ttu-id="6cb5a-132">如果不存在所请求的类型的默认文件夹， <b>GetDefaultFolder</b>将返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#）。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-132">If the default folder of the requested type does not exist, <b>GetDefaultFolder</b> returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span></span></returns>
        <remarks><para><span data-ttu-id="6cb5a-133">此方法类似于是<see cref="M:Microsoft.Office.Interop.Outlook._NameSpace.GetDefaultFolder(Microsoft.Office.Interop.Outlook.OlDefaultFolders)" />方法<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-133">This method is similar to the <see cref="M:Microsoft.Office.Interop.Outlook._NameSpace.GetDefaultFolder(Microsoft.Office.Interop.Outlook.OlDefaultFolders)" /> method of the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> object.</span></span> <span data-ttu-id="6cb5a-134">不同之处在于，此方法获取关联帐户后，传递存储区上的默认文件夹，而<b>NameSpace</b>对象的<b>GetDefaultFolder</b>上当前配置文件的默认存储区中返回的默认文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-134">The difference is that this method gets the default folder on the delivery store that is associated with the account, whereas <b>GetDefaultFolder</b> of the <b>NameSpace</b> object returns the default folder on the default store for the current profile.</span></span></para>
          <para><span data-ttu-id="6cb5a-135">一个时<b>GetDefaultFolder</b>将返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#） 的示例是何时<see cref="F:Microsoft.Office.Interop.Outlook.OlDefaultFolders.olFolderManagedEmail" />指定为<paramref name="FolderType" />但尚未部署托管文件夹组。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-135">One example of when <b>GetDefaultFolder</b> returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) is when <see cref="F:Microsoft.Office.Interop.Outlook.OlDefaultFolders.olFolderManagedEmail" /> is specified as the <paramref name="FolderType" /> but the Managed Folders group has not been deployed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.MAPIFolder GetRootFolder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.MAPIFolder GetRootFolder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.GetRootFolder" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRootFolder () As MAPIFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::MAPIFolder ^ GetRootFolder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.MAPIFolder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb5a-136">返回<see cref="T:Microsoft.Office.Interop.Outlook.Folder" />对象，表示的根级别文件夹<see cref="T:Microsoft.Office.Interop.Outlook.Store" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-136">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Folder" /> object representing the root-level folder of the <see cref="T:Microsoft.Office.Interop.Outlook.Store" />.</span></span> <span data-ttu-id="6cb5a-137">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-137">Read-only.</span></span></summary>
        <returns><span data-ttu-id="6cb5a-138">表示该 <b>存储区</b> 的根文件夹的 <b>文件夹</b> 对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-138">A <b>Folder</b> object that represents the folder at the root of that <b>Store</b>.</span></span></returns>
        <remarks><para><span data-ttu-id="6cb5a-139"><b>GetRootFolder</b> 方法可用于枚举 <b>存储区</b> 的根文件夹的子文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-139">You can use the <b>GetRootFolder</b> method to enumerate the subfolders of the root folder of the <b>Store</b>.</span></span> <span data-ttu-id="6cb5a-140">与不同<see cref="P:Microsoft.Office.Interop.Outlook._NameSpace.Folders" />其中包含当前配置文件中的所有存储区的所有文件夹、 <b>Store.GetRootFolder.Folders</b>允许您枚举中的当前配置文件的给定<b>存储</b>对象的所有文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-140">Unlike <see cref="P:Microsoft.Office.Interop.Outlook._NameSpace.Folders" /> which contains all folders for all stores in the current profile, <b>Store.GetRootFolder.Folders</b> allows you to enumerate all folders for a given <b>Store</b> object in the current profile.</span></span></para>
          <para><span data-ttu-id="6cb5a-141"><see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.Parent" />的存储区的根文件夹的属性将返回字符串"Mapi"。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-141">The <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.Parent" /> property of the root folder of a store returns the string "Mapi".</span></span></para>
          <para><span data-ttu-id="6cb5a-142">Exchange 公用文件夹存储区的根文件夹是 "公用文件夹"。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-142">The root folder for the Exchange Public Folder store is the folder Public Folders.</span></span> <span data-ttu-id="6cb5a-143">此文件夹由 Application.Session.GetDefaultFolder(olPublicFoldersAllPublicFolders) 调用返回。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-143">This folder is returned by the call to Application.Session.GetDefaultFolder(olPublicFoldersAllPublicFolders).</span></span></para>
          <para><span data-ttu-id="6cb5a-144">如果服务提供商不支持根文件夹，则 
            <b>GetRootFolder</b> 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-144">
            <b>GetRootFolder</b> returns an error if the service provider does not support root folders.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Rules GetRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Rules GetRules() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.GetRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRules () As Rules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Rules ^ GetRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Rules</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb5a-145">返回<see cref="T:Microsoft.Office.Interop.Outlook.Rules" />集合对象，它包含<see cref="T:Microsoft.Office.Interop.Outlook.Rule" />为当前会话定义的对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-145">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> collection object that contains the <see cref="T:Microsoft.Office.Interop.Outlook.Rule" /> objects defined for the current session.</span></span></summary>
        <returns><span data-ttu-id="6cb5a-146">针对当前会话定义的 <b>规则</b> 集合对象，该对象表示的一组 <b>规则</b> 。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-146">A <b>Rules</b> collection object that represents the set of <b>Rules</b> defined for the current session.</span></span></returns>
        <remarks><para><span data-ttu-id="6cb5a-147">调用 <b>GetRules</b> 可以在低速连接到 Exchange 服务器的性能方面代价高昂的操作。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-147">Calling <b>GetRules</b> can be an expensive operation in terms of performance on slow connections to an Exchange server.</span></span></para>
          <para><span data-ttu-id="6cb5a-148">在<b>GetRules</b>返回集合中， <b>Rule</b>对象的顺序将遵循的<see cref="P:Microsoft.Office.Interop.Outlook._Rule.ExecutionOrder" />与<b>ExecutionOrder</b>等于 1 为集合中第一个<b>规则</b>， <b>ExecutionOrder</b>等于<see cref="P:Microsoft.Office.Interop.Outlook._Rules.Count" />正在最后一次集合中的<b>规则</b>。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-148">The order of the <b>Rule</b> objects in the collection returned from <b>GetRules</b> follows that of <see cref="P:Microsoft.Office.Interop.Outlook._Rule.ExecutionOrder" /> with <b>ExecutionOrder</b> equal 1 being the first <b>Rule</b> in the collection and <b>ExecutionOrder</b> equal <see cref="P:Microsoft.Office.Interop.Outlook._Rules.Count" /> being the last <b>Rule</b> in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchFolders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Folders GetSearchFolders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Folders GetSearchFolders() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.GetSearchFolders" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSearchFolders () As Folders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Folders ^ GetSearchFolders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Folders</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb5a-149">返回<see cref="T:Microsoft.Office.Interop.Outlook.Folders" />集合对象，它代表搜索文件夹定义<see cref="T:Microsoft.Office.Interop.Outlook.Store" />对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-149">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Folders" /> collection object that represents the search folders defined for the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> object.</span></span></summary>
        <returns><span data-ttu-id="6cb5a-150">表示 <b>存储</b> 对象的所有搜索文件夹的 <b>文件夹</b> 集合对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-150">A <b>Folders</b> collection object that represents all the search folders for the <b>Store</b> object.</span></span></returns>
        <remarks><para><span data-ttu-id="6cb5a-p118">
            <b>GetSearchFolders</b> 返回的 <b>存储区</b> 所有可见的活动的搜索文件夹。它将不再返回未初始化或已清除的搜索文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p118">
            <b>GetSearchFolders</b> returns all the visible active search folders for the <b>Store</b>. It does not return uninitialized or aged out search folders.</span></span></para>
          <para><span data-ttu-id="6cb5a-153"><b>Folders</b>集合对象，
            <b>则 GetSearchFolders</b>返回<see cref="P:Microsoft.Office.Interop.Outlook._Folders.Count" />等于零 (0)，如果已<b>存储</b>不定义任何搜索文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-153">
            <b>GetSearchFolders</b> returns a <b>Folders</b> collection object with <see cref="P:Microsoft.Office.Interop.Outlook._Folders.Count" /> equal zero (0) if no search folders have been defined for the <b>Store</b>.</span></span></para>
          <para><span data-ttu-id="6cb5a-154">表示集合的搜索文件夹的<b>Folders</b>集合对象的<see cref="P:Microsoft.Office.Interop.Outlook._Folders.Parent" />返回相同的对象<see cref="M:Microsoft.Office.Interop.Outlook._Store.GetRootFolder" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-154">For a <b>Folders</b> collection object that represents a collection of search folders, <see cref="P:Microsoft.Office.Interop.Outlook._Folders.Parent" /> returns the same object as <see cref="M:Microsoft.Office.Interop.Outlook._Store.GetRootFolder" />.</span></span> <span data-ttu-id="6cb5a-155"><see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.Folders" />返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#）。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-155"><see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.Folders" /> returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpecialFolder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.MAPIFolder GetSpecialFolder (Microsoft.Office.Interop.Outlook.OlSpecialFolders FolderType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.MAPIFolder GetSpecialFolder([in]valuetype Microsoft.Office.Interop.Outlook.OlSpecialFolders FolderType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.GetSpecialFolder(Microsoft.Office.Interop.Outlook.OlSpecialFolders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpecialFolder (FolderType As OlSpecialFolders) As MAPIFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::MAPIFolder ^ GetSpecialFolder(Microsoft::Office::Interop::Outlook::OlSpecialFolders FolderType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.MAPIFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FolderType" Type="Microsoft.Office.Interop.Outlook.OlSpecialFolders" />
      </Parameters>
      <Docs>
        <param name="FolderType"><span data-ttu-id="6cb5a-156">在存储中的指定类型的特殊文件夹的 <b>OlSpecialFolders</b> 枚举常量。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-156">A constant in the <b>OlSpecialFolders</b> enumeration that specifies the type of the special folder in the store.</span></span></param>
        <summary><span data-ttu-id="6cb5a-157">返回<see cref="T:Microsoft.Office.Interop.Outlook.Folder" />对象由指定的特殊文件夹<paramref name="FolderType" />给定存储区中。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-157">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Folder" /> object for a special folder specified by <paramref name="FolderType" /> in a given store.</span></span></summary>
        <returns><span data-ttu-id="6cb5a-158">一个代表由指定的特殊文件夹的<b>Folder</b>对象<paramref name="FolderType" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-158">A <b>Folder</b> object that represents a special folder specified by the  <paramref name="FolderType" />.</span></span></returns>
        <remarks><para><span data-ttu-id="6cb5a-159">并非所有存储区中都存在所有特殊文件夹。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-159">Not all special folders exist in all stores.</span></span>  <span data-ttu-id="6cb5a-160">如果不存在所请求的特殊文件夹，将返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#）。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-160">If the requested special folder does not exist, <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) will be returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCachedExchange">
      <MemberSignature Language="C#" Value="public bool IsCachedExchange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCachedExchange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.IsCachedExchange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCachedExchange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCachedExchange { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64222)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64222)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-161">返回一个<b>布尔</b>(C# 中<b>bool</b> )，该值指示如果<see cref="T:Microsoft.Office.Interop.Outlook.Store" />是缓存的 Exchange 存储区。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-161">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> is a cached Exchange store.</span></span> <span data-ttu-id="6cb5a-162">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-162">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-163">
            <b>IsCachedExchange</b>返回<b>True</b>时<see cref="P:Microsoft.Office.Interop.Outlook._Store.ExchangeStoreType" />是 （<b>Store.ExchangeStoreType</b>是<b>olExchangePrimaryMailbox</b>） 主 Exchange 邮箱和邮箱配置为使用缓存 Exchange 模式。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-163">
            <b>IsCachedExchange</b> returns <b>True</b> when <see cref="P:Microsoft.Office.Interop.Outlook._Store.ExchangeStoreType" /> is a primary Exchange mailbox (<b>Store.ExchangeStoreType</b> is <b>olExchangePrimaryMailbox</b>) and the mailbox is configured to use cached Exchange mode.</span></span> <span data-ttu-id="6cb5a-164">它否则返回 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-164">It returns <b>False</b> otherwise.</span></span> <span data-ttu-id="6cb5a-165"><b>特别是，它返回为配置 Exchange 公用文件夹存储到缓存的公用文件夹收藏夹</b></span><span class="sxs-lookup"><span data-stu-id="6cb5a-165">In particular, it returns <b>False</b> for an Exchange Public Folder store that is configured to cache Public Folder favorites.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConversationEnabled">
      <MemberSignature Language="C#" Value="public bool IsConversationEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConversationEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.IsConversationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConversationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConversationEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64630)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-166">返回<see cref="T:System.Boolean" />(<b>bool</b>的 C#) 值，该值为<b>True</b>如果存储区支持会话视图。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-166">Returns a <see cref="T:System.Boolean" /> (<b>bool</b> for C#) value that is <b>True</b> if the store supports the Conversation view.</span></span> <span data-ttu-id="6cb5a-167">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-168">存储区支持会话视图，如果存储区为 POP、 IMAP 或 PST 存储区中，或者运行至少的 Microsoft Exchange Server 的版本 Microsoft Exchange Server 2010。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-168">A store supports the Conversation view if the store is a POP, IMAP, or PST store, or if it runs a version of Microsoft Exchange Server that is at least Microsoft Exchange Server 2010.</span></span> <span data-ttu-id="6cb5a-169">存储区如果存储正在运行 Microsoft Exchange Server 2007 还支持对话视图，Outlook 版本至少是 Microsoft Outlook 2010 和 Outlook 中缓存模式下运行。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-169">A store also supports the Conversation view if the store is running Microsoft Exchange Server 2007, the version of Outlook is at least Microsoft Outlook 2010, and Outlook is running in cached mode.</span></span></para>
          <para><span data-ttu-id="6cb5a-170">如果存储区支持对话，调用存储区中的项目的<b>GetConversation</b>方法返回<see cref="T:Microsoft.Office.Interop.Outlook.Conversation" />项对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-170">If a store supports conversations, calling the <b>GetConversation</b> method of an item in the store returns a <see cref="T:Microsoft.Office.Interop.Outlook.Conversation" /> object for the item.</span></span> <span data-ttu-id="6cb5a-171">如果存储区不支持对话， <b>GetConversation</b>返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#） 的存储区中的项目。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-171">If the store does not support conversations, <b>GetConversation</b> returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) for items in the store.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataFileStore">
      <MemberSignature Language="C#" Value="public bool IsDataFileStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataFileStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.IsDataFileStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDataFileStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataFileStore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64223)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64223)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-172">返回一个<b>布尔</b>(C# 中<b>bool</b> )，该值指示如果<see cref="T:Microsoft.Office.Interop.Outlook.Store" />是 Outlook 数据文件，即个人文件夹文件 (.pst) 或脱机文件夹文件 (.ost) 存储区。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-172">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> is a store for  an Outlook data file, which is either a Personal Folders File (.pst) or an Offline Folder File (.ost).</span></span> <span data-ttu-id="6cb5a-173">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-173">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-174">
            <b>IsDataFileStore</b> 支持只有 Exchange 存储，并将返回 <b>False</b> ，如 Hotmail 和 MSN，HTTP 类型存储和 IMAP 存储区。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-174">
            <b>IsDataFileStore</b> supports only Exchange stores, and will return <b>False</b> for HTTP-type stores such as Hotmail and MSN, and for IMAP stores.</span></span></para>
          <para><span data-ttu-id="6cb5a-175">对于 Exchange 存储区， <b>IsDataFileStore</b> 将返回 <b>False</b> 如果用户配置文件不使用缓存 Exchange 模式。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-175">For Exchange stores, <b>IsDataFileStore</b> will return <b>False</b> if the user profile is not using Cached Exchange mode.</span></span> <span data-ttu-id="6cb5a-176"><b>IsDataFileStore</b>还将返回<b>False</b>作为 Exchange 公用文件夹存储区时 (即，<see cref="P:Microsoft.Office.Interop.Outlook._Store.ExchangeStoreType" />是<b>olExchangePublicFolder</b>)。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-176"><b>IsDataFileStore</b> will also return <b>False</b> when the store is an Exchange Public Folder (that is, <see cref="P:Microsoft.Office.Interop.Outlook._Store.ExchangeStoreType" /> is <b>olExchangePublicFolder</b>).</span></span></para>
          <para><span data-ttu-id="6cb5a-p128">
            <b>IsDataFileStore</b> 不指示是否存储位于本地硬盘上。例如，在映射的网络驱动器上找一个.pst 文件， <b>IsDataFileStore</b> 仍将返回 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p128">
            <b>IsDataFileStore</b> does not indicate whether the store is located on a local hard drive. For example, a .pst file could be located on a mapped network drive and <b>IsDataFileStore</b> would still return <b>True</b>.</span></span></para>
          <para><span data-ttu-id="6cb5a-p129">如果将用户配置为经典 Exchange 脱机模式，可以更改 <b>IsDataFileStore</b> 的返回值。当用户处于脱机状态，并使用经典的 Exchange 脱机模式， <b>IsDataFileStore</b> 将返回 <b>True</b> 。当该用户联机并使用经典的 Exchange 联机模式时， <b>IsDataFileStore</b> 将返回 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p129">The return value of <b>IsDataFileStore</b> can change if the user is configured for classic Exchange offline mode. When the user is offline and using classic Exchange offline mode, <b>IsDataFileStore</b> will return <b>True</b>. When the user is online and using classic Exchange online mode, <b>IsDataFileStore</b> will return <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstantSearchEnabled">
      <MemberSignature Language="C#" Value="public bool IsInstantSearchEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInstantSearchEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.IsInstantSearchEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInstantSearchEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInstantSearchEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-182">返回<b>Boolean</b> (C# 中<b>bool</b> )，该值指示是否即时搜索为已启用对存储操作。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-182">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates whether Instant Search is enabled and operational on a store.</span></span> <span data-ttu-id="6cb5a-183">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-183">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-p131">使用 <b>IsInstantSearchEnabled</b> 来评估是否应在查询中使用 <b>ci_startswith</b> 或 <b>ci_phrasematch</b> 运算符。如果您使用 <b>ci_startswith</b> 或 <b>ci_phrasematch</b> 查询和即时搜索中未启用，则 Outlook 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p131">Use <b>IsInstantSearchEnabled</b> to evaluate whether you should use <b>ci_startswith</b> or <b>ci_phrasematch</b> operators in your query. If you use <b>ci_startswith</b> or <b>ci_phrasematch</b> in the query and Instant Search is not enabled, Outlook will return an error. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-186">返回一个<b>布尔</b>(C# 中<b>bool</b> )，该值指示如果<see cref="T:Microsoft.Office.Interop.Outlook.Store" />处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-186">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> is open.</span></span> <span data-ttu-id="6cb5a-187">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-187">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-188">此属性支持 Exchange 和非 Exchange 存储区。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-188">This property supports both Exchange and non-Exchange stores.</span></span></para>
          <para><span data-ttu-id="6cb5a-p133">
            <b>IsOpen</b> 仅指示是否打开存储区。它并不表示如果存储处于脱机状态，或者如果它是 Exchange 邮箱或 Exchange 公用文件夹和存储服务器已关闭。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p133">
            <b>IsOpen</b> only indicates if the store is open. It does not indicate if the store is offline, or if it is an Exchange mailbox or an Exchange Public Folder and the store server is down.</span></span></para>
          <para><span data-ttu-id="6cb5a-191">打开存储可以实施性能开销，因为和<see cref="M:Microsoft.Office.Interop.Outlook._Store.GetRootFolder" />和<see cref="M:Microsoft.Office.Interop.Outlook._Store.GetSearchFolders" />将打开存储如果尚未打开，您可以使用<b>IsOpen</b>决定之前调用<b>GetRootFolder</b>或<b>则 GetSearchFolders</b>大程度地减少性能开销。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-191">Because opening a store can impose a performance overhead, and <see cref="M:Microsoft.Office.Interop.Outlook._Store.GetRootFolder" /> and <see cref="M:Microsoft.Office.Interop.Outlook._Store.GetSearchFolders" /> will open a store if it is not already open, you can use <b>IsOpen</b> before deciding to call <b>GetRootFolder</b> or <b>GetSearchFolders</b> to minimize performance overhead.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MAPIOBJECT">
      <MemberSignature Language="C#" Value="public object MAPIOBJECT { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MAPIOBJECT" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.MAPIOBJECT" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MAPIOBJECT As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MAPIOBJECT { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-192">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-192">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-p135">返回指定对象的 <b>对象</b> 的父级。只读的。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p135">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-195">父对象的<see cref="T:Microsoft.Office.Interop.Outlook.Store" />对象是<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-195">The parent of the <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> object is the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyAccessor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.PropertyAccessor PropertyAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.PropertyAccessor PropertyAccessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.PropertyAccessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyAccessor As PropertyAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::PropertyAccessor ^ PropertyAccessor { Microsoft::Office::Interop::Outlook::PropertyAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64253)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.PropertyAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-196">返回<see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" />支持创建、 获取、 设置和删除属性对象的父对象<see cref="T:Microsoft.Office.Interop.Outlook.Store" />对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-196">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.PropertyAccessor" /> object that supports creating, getting, setting, and deleting properties of the parent <see cref="T:Microsoft.Office.Interop.Outlook.Store" /> object.</span></span> <span data-ttu-id="6cb5a-197">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-197">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshQuotaDisplay">
      <MemberSignature Language="C#" Value="public void RefreshQuotaDisplay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshQuotaDisplay() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Store.RefreshQuotaDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshQuotaDisplay ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshQuotaDisplay();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64590)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb5a-198">刷新资源管理器窗口的状态栏中显示的存储配额信息。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-198">Refreshes the store quota information that is displayed in the status bar in the explorer window.</span></span></summary>
        <remarks><para><span data-ttu-id="6cb5a-199">如果存储区不支持配额信息的显示，则此方法将不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-199">If the store does not support the display of quota information, this method does nothing.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-200">返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象的当前会话。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-200">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="6cb5a-201">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-201">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-202"><b>Session</b>属性和<see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />可以交替使用方法来获取当前会话的<b>NameSpace</b>对象。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-202">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="6cb5a-203">这两个成员可以实现同一目的。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-203">Both members serve the same purpose.</span></span> <span data-ttu-id="6cb5a-204">例如，以下语句对执行相同的功能：</span><span class="sxs-lookup"><span data-stu-id="6cb5a-204">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreID">
      <MemberSignature Language="C#" Value="public string StoreID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Store.StoreID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoreID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb5a-205">返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 标识<see cref="T:Microsoft.Office.Interop.Outlook.Store" />。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-205">Returns a <b>String</b> (<b>string</b> in C#) identifying the <see cref="T:Microsoft.Office.Interop.Outlook.Store" />.</span></span> <span data-ttu-id="6cb5a-206">只读。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-206">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6cb5a-p140">
            <b>StoreID</b> 是唯一的配置文件。它相当于 <b>PidTagStoreEntryId</b> 的 MAPI 属性。</span><span class="sxs-lookup"><span data-stu-id="6cb5a-p140">
            <b>StoreID</b> is unique to the profile. It is equivalent to the MAPI property <b>PidTagStoreEntryId</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
