<Type Name="Application" FullName="Microsoft.Office.Interop.Outlook.Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="801583c80d7ad4efb3f58f9096c0aeb20ef5434f" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27899352" /></Metadata><TypeSignature Language="C#" Value="public interface Application : Microsoft.Office.Interop.Outlook._Application, Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Application implements class Microsoft.Office.Interop.Outlook._Application, class Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface Application&#xA;Implements _Application, ApplicationEvents_11_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Application : Microsoft::Office::Interop::Outlook::_Application, Microsoft::Office::Interop::Outlook::ApplicationEvents_11_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._Application</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.ApplicationClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063001-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59583-101">代表整个 Outlook 应用程序。</span><span class="sxs-lookup"><span data-stu-id="59583-101">Represents the entire Outlook application.</span></span></summary>
    <remarks><para><span data-ttu-id="59583-102">这是.NET 接口派生的互操作性与相应的 COM 对象的托管代码需要 COM coclass。</span><span class="sxs-lookup"><span data-stu-id="59583-102">This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="59583-103">使用此派生的接口访问 COM 对象的所有方法、 属性和事件的成员。</span><span class="sxs-lookup"><span data-stu-id="59583-103">Use this derived interface to access all method, property, and event members of the COM object.</span></span> <span data-ttu-id="59583-104">但是，如果方法或想要使用的事件共享相同的名称相同的 COM 对象下，强制转换为相应的主接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="59583-104">However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="59583-105">请参阅本主题的 COM 对象有关的信息。</span><span class="sxs-lookup"><span data-stu-id="59583-105">Refer to this topic for information about the COM object.</span></span> <span data-ttu-id="59583-106">有关 COM 对象的方法和属性成员的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook._Application" />。</span><span class="sxs-lookup"><span data-stu-id="59583-106">For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._Application" />.</span></span> <span data-ttu-id="59583-107">有关 COM 对象的事件成员的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />。</span><span class="sxs-lookup"><span data-stu-id="59583-107">For information about the event members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />.</span></span></para>
      <para><span data-ttu-id="59583-108">这是可以使用返回的层次结构中的唯一对象<see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />方法或固有 Visual Basic <b>GetObject</b>函数。</span><span class="sxs-lookup"><span data-stu-id="59583-108">This is the only object in the hierarchy that can be returned by using the <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />  method or the intrinsic Visual Basic <b>GetObject</b> function.</span></span></para>
      <para><span data-ttu-id="59583-109">Outlook <b>应用程序</b> 对象具有以下几个目的︰</span><span class="sxs-lookup"><span data-stu-id="59583-109">The Outlook <b>Application</b> object has several purposes:</span></span></para>
      <list type="bullet">
        <item>
          <para><span data-ttu-id="59583-110">作为根对象，允许访问 Outlook 层次结构中的其他对象。</span><span class="sxs-lookup"><span data-stu-id="59583-110">As the root object, it allows access to other objects in the Outlook hierarchy.</span></span></para>
        </item>
        <item>
          <para><span data-ttu-id="59583-111">允许使用创建的新项目的直接访问<see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />，而不必遍历对象层次结构。</span><span class="sxs-lookup"><span data-stu-id="59583-111">It allows direct access to a new item created by using <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />, without having to traverse the object hierarchy.</span></span></para>
        </item>
        <item>
          <para><span data-ttu-id="59583-112">允许访问活动界面对象（浏览器和检查器）。</span><span class="sxs-lookup"><span data-stu-id="59583-112">It allows access to the active interface objects (the explorer and the inspector).</span></span></para>
        </item>
      </list>
      <para><span data-ttu-id="59583-113">当您使用自动化控制 Microsoft Outlook 从其他应用程序时，使用<b>CreateObject</b>方法创建 Outlook <b>Application</b>对象。</span><span class="sxs-lookup"><span data-stu-id="59583-113">When you use Automation to control Microsoft Outlook from another application, you use the <b>CreateObject</b> method to create an Outlook <b>Application</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members />
</Type>