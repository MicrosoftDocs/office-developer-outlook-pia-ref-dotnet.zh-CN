<Type Name="_OlkCommandButton" FullName="Microsoft.Office.Interop.Outlook._OlkCommandButton">
  <Metadata><Meta Name="ms.openlocfilehash" Value="514c2b47aad5e0f65ed9fb8a30338a93e30048b4" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139607" /></Metadata><TypeSignature Language="C#" Value="public interface _OlkCommandButton" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OlkCommandButton" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._OlkCommandButton" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OlkCommandButton" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OlkCommandButton" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000672DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2e980-101">这是 COM coclass（托管代码需要此 Coclass 来实现与相应的 COM 对象的互操作性）中的主接口。</span><span class="sxs-lookup"><span data-stu-id="2e980-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="2e980-102">仅当您想要使用的方法与 COM 对象的事件共享同一名称时才使用此主接口；在这种情况下，转换为此接口以调用该方法，转换为最新的事件接口以连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="2e980-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="2e980-103">否则，请使用派生自 COM coclass 的 .NET 接口来访问方法、属性和 COM 对象的事件。</span><span class="sxs-lookup"><span data-stu-id="2e980-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="2e980-104">有关 COM 对象的信息，请参阅 <see cref="T:Microsoft.Office.Interop.Outlook.OlkCommandButton" /> 。</span><span class="sxs-lookup"><span data-stu-id="2e980-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.OlkCommandButton" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accelerator">
      <MemberSignature Language="C#" Value="public string Accelerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accelerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.Accelerator" />
      <MemberSignature Language="VB.NET" Value="Public Property Accelerator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accelerator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-105">返回或<b>设置一 (</b><b>字符串</b>，C#) 值表示的加速键或热键的控件。</span><span class="sxs-lookup"><span data-stu-id="2e980-105">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the accelerator or hot key for the control.</span></span> <span data-ttu-id="2e980-106">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-106">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-p103">默认值为空字符串，表示没有热键。如果该属性设置为包含多个字符的字符串，则该值将被截断为只包含第一个字符。</span><span class="sxs-lookup"><span data-stu-id="2e980-p103">The default value is an empty string, meaning there is no hot key.  If the property is set with a string of more than one character, the value will  be truncated to the first character.</span></span>  </para>
          <para><span data-ttu-id="2e980-109">不能在加速键中使用数字。</span><span class="sxs-lookup"><span data-stu-id="2e980-109">You cannot use digits in an accelerator.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-110">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) 自动调整控件大小以显示整个内容。</span><span class="sxs-lookup"><span data-stu-id="2e980-110">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that automatically sizes the control to display  the entire contents.</span></span> <span data-ttu-id="2e980-111">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-111">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para>  <span data-ttu-id="2e980-112">此属性的默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="2e980-112">The default value for this property is <b>False</b>.</span></span></para>
          <para><span data-ttu-id="2e980-113">对于按钮控件，此属性指定该控件是否自动调整以显示整个标题值。</span><span class="sxs-lookup"><span data-stu-id="2e980-113">For a button control, this property specifies whether the control automatically adjusts to display the entire caption value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-114">返回或<b>设置一 (</b><b>字符串</b>，C#) 对象上显示以标识或描述该对象。</span><span class="sxs-lookup"><span data-stu-id="2e980-114">Returns or sets a <b>String</b> (<b>string</b> in C#) that appears on an object to identify or describe it.</span></span>  <span data-ttu-id="2e980-115">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-115">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-p106">默认值为空字符串。窗体设计器将此属性设置为控件的默认名称。</span><span class="sxs-lookup"><span data-stu-id="2e980-p106">The default value is an empty string. The Forms Designer sets this property to the control's default name.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDropArrow">
      <MemberSignature Language="C#" Value="public bool DisplayDropArrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDropArrow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.DisplayDropArrow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDropArrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDropArrow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-118">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) ，该布尔值可在按钮上呈现向下箭头。</span><span class="sxs-lookup"><span data-stu-id="2e980-118">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that enables the rendering of a downward-pointing arrow on the button.</span></span> <span data-ttu-id="2e980-119">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-119">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-120">此箭头以从左到右书写的语言呈现在按钮的右侧，使用从右向左书写的语言呈现在左侧。</span><span class="sxs-lookup"><span data-stu-id="2e980-120">This arrow is rendered on the right on the button in languages written left-to-right and on the left in languages written right-to-left.</span></span> <span data-ttu-id="2e980-121"><b>真</b> 要呈现 <b>False</b> 以禁用呈现的按钮上的箭头。</span><span class="sxs-lookup"><span data-stu-id="2e980-121"><b>True</b> to render the arrow on the button, <b>False</b> to disable the rendering.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-122">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) 指示是否允许控件运行。</span><span class="sxs-lookup"><span data-stu-id="2e980-122">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the control is allowed to function.</span></span>  <span data-ttu-id="2e980-123">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-123">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-124">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="2e980-124">The default value is <b>False</b>.</span></span></para>
          <para><span data-ttu-id="2e980-p110">当控件被禁用时，控件的内容显示为灰色。</span><span class="sxs-lookup"><span data-stu-id="2e980-p110">When the control is disabled, the contents of the control appear dimmed. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public stdole.StdFont Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdFont Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As StdFont" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdFont ^ Font { stdole::StdFont ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-126">返回一 <b>个 StdFont，</b> 它代表用于在控件内呈现文本的字体。</span><span class="sxs-lookup"><span data-stu-id="2e980-126">Returns an <b>StdFont</b> that represents the font used to render the text inside the control.</span></span>  <span data-ttu-id="2e980-127">只读。</span><span class="sxs-lookup"><span data-stu-id="2e980-127">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseIcon">
      <MemberSignature Language="C#" Value="public stdole.StdPicture MouseIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdPicture MouseIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.MouseIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseIcon As StdPicture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdPicture ^ MouseIcon { stdole::StdPicture ^ get(); void set(stdole::StdPicture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdPicture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-128">返回或设置 <b>一个 StdPicture，</b> 代表此控件的鼠标光标的自定义图片。</span><span class="sxs-lookup"><span data-stu-id="2e980-128">Returns or sets an <b>StdPicture</b> that represents a custom picture to the mouse cursor for this control.</span></span> <span data-ttu-id="2e980-129">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-129">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-130">默认值为<b>Nothing</b> (空引用 (Nothing Visual Basic) in C#) 。</span><span class="sxs-lookup"><span data-stu-id="2e980-130">The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePointer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.MousePointer" />
      <MemberSignature Language="VB.NET" Value="Public Property MousePointer As OlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlMousePointer MousePointer { Microsoft::Office::Interop::Outlook::OlMousePointer get(); void set(Microsoft::Office::Interop::Outlook::OlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-131">返回或设置一个常量，该常量指定当用户将鼠标放在控件上时 <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> 显示的指针类型。</span><span class="sxs-lookup"><span data-stu-id="2e980-131">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> constant that specifies the type of pointer displayed when the user positions the mouse over the control.</span></span>  <span data-ttu-id="2e980-132">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-132">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-133">默认值是 <b>olMousePointerDefault</b> 。</span><span class="sxs-lookup"><span data-stu-id="2e980-133">The default value is <b>olMousePointerDefault</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Picture">
      <MemberSignature Language="C#" Value="public stdole.StdPicture Picture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdPicture Picture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.Picture" />
      <MemberSignature Language="VB.NET" Value="Public Property Picture As StdPicture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdPicture ^ Picture { stdole::StdPicture ^ get(); void set(stdole::StdPicture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-523)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-523)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdPicture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-134">返回或设置 <b>一个 StdPicture，</b> 它代表控件上显示的图片。</span><span class="sxs-lookup"><span data-stu-id="2e980-134">Returns or sets an <b>StdPicture</b> that represents the picture that is displayed on the control.</span></span>    <span data-ttu-id="2e980-135">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-135">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-136">默认值为<b>Nothing</b> (空引用 (Nothing Visual Basic) in C#) 。</span><span class="sxs-lookup"><span data-stu-id="2e980-136">The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span></span></para>
          <para><span data-ttu-id="2e980-137">图片和文本不能同时显示在控件上，因此设置图片属性时，文本属性将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2e980-137">A picture and text cannot be displayed at the same time on the control, so when the picture property is set, the text property is ignored.</span></span></para>
          <para><span data-ttu-id="2e980-p115">图片始终显示在按钮控件的中央。将根据需要对图片进行剪切以使其适应可用空间。</span><span class="sxs-lookup"><span data-stu-id="2e980-p115">The picture is always displayed in the center of the button control.  The picture will be clipped as necessary to fit in the available space.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlPictureAlignment PictureAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlPictureAlignment PictureAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.PictureAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureAlignment As OlPictureAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlPictureAlignment PictureAlignment { Microsoft::Office::Interop::Outlook::OlPictureAlignment get(); void set(Microsoft::Office::Interop::Outlook::OlPictureAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlPictureAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-140">返回或设置一个常量，该常量指定按钮上 <see cref="T:Microsoft.Office.Interop.Outlook.OlPictureAlignment" /> 图像和文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="2e980-140">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlPictureAlignment" /> constant that specifies the alignment of the image and the text on the button.</span></span> <span data-ttu-id="2e980-141">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-141">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As OlTextAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlTextAlign TextAlign { Microsoft::Office::Interop::Outlook::OlTextAlign get(); void set(Microsoft::Office::Interop::Outlook::OlTextAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlTextAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-142">返回或设置 <see cref="T:Microsoft.Office.Interop.Outlook.OlTextAlign" /> 一个常量，该常量指定控件中文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="2e980-142">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlTextAlign" /> constant that specifies how text is aligned in the control.</span></span>  <span data-ttu-id="2e980-143">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-143">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-144">默认值是 <b>olTextAlignLeft</b> 中与英语等从左到右语言。</span><span class="sxs-lookup"><span data-stu-id="2e980-144">The default value is <b>olTextAlignLeft</b> in left-to-right languages such as English.</span></span></para>
          <para><span data-ttu-id="2e980-145">对于命令按钮控件，当 <b>文本对齐</b> 设置为 <b>olTextAlignLeft</b> ，左边的距是从控件的边框仅一个像素。</span><span class="sxs-lookup"><span data-stu-id="2e980-145">For the Command Button control, when <b>TextAlign</b> is set to <b>olTextAlignLeft</b>, the left margin is only one pixel from the border of the control.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkCommandButton.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e980-146">返回或设置一个 <b>boolean</b> (<b>bool</b> C#) ，指定控件的内容是否自动换行的末尾。</span><span class="sxs-lookup"><span data-stu-id="2e980-146">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether the contents of a control automatically wrap at the end of a line.</span></span>  <span data-ttu-id="2e980-147">读/写。</span><span class="sxs-lookup"><span data-stu-id="2e980-147">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e980-148">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="2e980-148">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
