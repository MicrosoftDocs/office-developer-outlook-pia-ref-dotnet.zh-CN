<Type Name="_CategoryRuleCondition" FullName="Microsoft.Office.Interop.Outlook._CategoryRuleCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14c716cb0655da2cc8cc9a5e5df763b607e40c44" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902563" /></Metadata><TypeSignature Language="C#" Value="public interface _CategoryRuleCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _CategoryRuleCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._CategoryRuleCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface _CategoryRuleCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class _CategoryRuleCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630DC-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="65fa8-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span><span class="sxs-lookup"><span data-stu-id="65fa8-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="65fa8-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="65fa8-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="65fa8-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span><span class="sxs-lookup"><span data-stu-id="65fa8-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="65fa8-104">有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.CategoryRuleCondition" />。</span><span class="sxs-lookup"><span data-stu-id="65fa8-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.CategoryRuleCondition" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-105">返回<see cref="T:Microsoft.Office.Interop.Outlook.Application" />表示 Outlook application 对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="65fa8-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="65fa8-106">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="65fa8-106">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public object Categories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Categories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Categories" />
      <MemberSignature Language="VB.NET" Value="Public Property Categories As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Categories { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64325)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-107">返回或设置代表由规则条件评估的类别<b>字符串</b>（C# 中的<b>字符串</b>） 元素的数组。</span><span class="sxs-lookup"><span data-stu-id="65fa8-107">Returns or sets an array of <b>String</b> (<b>string</b> in C#) elements that represents the categories evaluated by the rule condition.</span></span> <span data-ttu-id="65fa8-108">读/写。</span><span class="sxs-lookup"><span data-stu-id="65fa8-108">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65fa8-p104">您可以指定带有一个元素的数组来评估一个类别，或者带有多个字符串的数组来评估多个类别。在一个数组中指定的多个类别字符串是使用"逻辑或"运算评估的。</span><span class="sxs-lookup"><span data-stu-id="65fa8-p104">You can assign an array with one element to evaluate a single category or an array of multiple strings to evaluate multiple categories. Multiple category strings assigned in an array are evaluated using the logical OR operation.</span></span></para>
          <para><span data-ttu-id="65fa8-111">此属性使用在值名称 sList 中指定的字符作为多个类别的分隔符，该名称位于 Windows 注册表中的 HKEY_CURRENT_USER\Control Panel\International 下。</span><span class="sxs-lookup"><span data-stu-id="65fa8-111">This property uses the character specified in the value name, sList, under HKEY_CURRENT_USER\Control Panel\International in the Windows registry, as the delimiter for multiple categories.</span></span></para>
          <para><span data-ttu-id="65fa8-112">如果按 <b>类别</b> 指定的字符串匹配消息的类别，条件的计算结果为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="65fa8-112">If a string specified by <b>Categories</b> matches a category of the message, the condition evaluates to <b>True</b>.</span></span></para>
          <para><span data-ttu-id="65fa8-p105">Outlook 不会检查以确定该 <b>类别</b> 属性是否包含主类别列表中的类别名称。</span><span class="sxs-lookup"><span data-stu-id="65fa8-p105">Outlook does not check to determine if the <b>Categories</b> property contains category names that are in the master category list. </span></span></para>
          <para><span data-ttu-id="65fa8-114">如果 <b>类别</b> 包含一个或多个空字符串，则返回一个错误。</span><span class="sxs-lookup"><span data-stu-id="65fa8-114">Returns an error if <b>Categories</b> contains one or more empty strings.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-115">返回<see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" />常量，指示对象的类。</span><span class="sxs-lookup"><span data-stu-id="65fa8-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="65fa8-116">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="65fa8-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlRuleConditionType ConditionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlRuleConditionType ConditionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.ConditionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionType As OlRuleConditionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlRuleConditionType ConditionType { Microsoft::Office::Interop::Outlook::OlRuleConditionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64298)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlRuleConditionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-117">从返回常量， <b>olConditionCategory</b>，<see cref="T:Microsoft.Office.Interop.Outlook.OlRuleConditionType" />指示的规则条件的类型的枚举。</span><span class="sxs-lookup"><span data-stu-id="65fa8-117">Returns a constant,  <b>olConditionCategory</b>, from the <see cref="T:Microsoft.Office.Interop.Outlook.OlRuleConditionType" /> enumeration that indicates the type of rule condition.</span></span> <span data-ttu-id="65fa8-118">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="65fa8-118">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65fa8-119">接收邮件和规则以及邮件发送规则支持的类别的规则条件。</span><span class="sxs-lookup"><span data-stu-id="65fa8-119">The category rule condition is supported by rules for receiving  messages and rules for sending messages.</span></span> <span data-ttu-id="65fa8-120">有关详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87803">指定规则条件</a></span><span class="sxs-lookup"><span data-stu-id="65fa8-120">For more information, see <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Specifying Rule Conditions</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-121">返回或设置一个<b>boolean 类型的值</b>(C# 中<b>bool</b> ) 的确定是否启用的规则条件。</span><span class="sxs-lookup"><span data-stu-id="65fa8-121">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that determines if the rule condition is enabled.</span></span> <span data-ttu-id="65fa8-122">读/写。</span><span class="sxs-lookup"><span data-stu-id="65fa8-122">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65fa8-123">启用的规则条件后，还必须使用保存规则<see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" />，以便规则条件及其启用的状态当前会话。</span><span class="sxs-lookup"><span data-stu-id="65fa8-123">After you enable a rule condition, you must also save the rule by using <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> so that the rule  condition and its enabled state will persist beyond the current session.</span></span>  <span data-ttu-id="65fa8-124">规则条件只有在成功保存之后才能启用。</span><span class="sxs-lookup"><span data-stu-id="65fa8-124">A rule condition is only enabled after it has been saved successfully.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-p111">返回指定对象的 <b>对象</b> 的父级。只读的。</span><span class="sxs-lookup"><span data-stu-id="65fa8-p111">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65fa8-127">父对象是<see cref="T:Microsoft.Office.Interop.Outlook.RuleCondition" />对象。</span><span class="sxs-lookup"><span data-stu-id="65fa8-127">The parent object is the <see cref="T:Microsoft.Office.Interop.Outlook.RuleCondition" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._CategoryRuleCondition.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fa8-128">返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象的当前会话。</span><span class="sxs-lookup"><span data-stu-id="65fa8-128">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="65fa8-129">此为只读属性。</span><span class="sxs-lookup"><span data-stu-id="65fa8-129">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65fa8-130"><b>Session</b>属性和<see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />可以交替使用方法来获取当前会话的<b>NameSpace</b>对象。</span><span class="sxs-lookup"><span data-stu-id="65fa8-130">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="65fa8-131">这两个成员可以实现同一目的。</span><span class="sxs-lookup"><span data-stu-id="65fa8-131">Both members serve the same purpose.</span></span> <span data-ttu-id="65fa8-132">例如，以下语句对执行相同的功能：</span><span class="sxs-lookup"><span data-stu-id="65fa8-132">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
