<Type Name="_Application" FullName="Microsoft.Office.Interop.Outlook._Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1a76725d5ad1aff125d99fcb70c41ea0bd31ed" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20631595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063001-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="471b1-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="471b1-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="471b1-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="471b1-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="471b1-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="471b1-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="471b1-104">有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.Application" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="471b1-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Application" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveExplorer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Explorer ActiveExplorer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Explorer ActiveExplorer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveExplorer" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveExplorer () As Explorer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Explorer ^ ActiveExplorer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Explorer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="471b1-105">返回最顶端<see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />桌面上的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-105">Returns the topmost <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  object on the desktop.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-p102">表示在桌面上最顶层的资源管理器 <b>资源管理器</b> 。如果没有资源管理器处于活动状态，则返回 <b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p102">An <b>Explorer</b> that represents the topmost explorer on the desktop. Returns <b>Nothing</b> if no explorer is active.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-108">
            <para>使用此方法可返回用户最可能查看的<b>资源管理器</b>对象。此方法还可用于确定当没有任何活动资源管理器，因此可以打开一个新。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-108">
              <para> Use this method to return the <b>Explorer</b> object that the user is most likely viewing. This method is also useful for determining when there is no active explorer, so a new one can be opened.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveInspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector ActiveInspector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Inspector ActiveInspector() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveInspector" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveInspector () As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Inspector ^ ActiveInspector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="471b1-109">返回最顶端<see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />桌面上的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-109">Returns the topmost <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  object on the desktop.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-110">表示在桌面上最顶层的检查器 <b>检查器</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-110">An <b>Inspector</b> that represents the topmost inspector on the desktop.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-111">
            <para>使用此方法可访问该用户是最可能查看的<b>Inspector</b>对象。</para>
            <para>如果没有检查器处于活动状态，则返回<b>Nothing</b>。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-111">
              <para> Use this method to access the <b>Inspector</b> object that the user is most likely to be viewing.</para>
              <para>If no inspector is active, returns <b>Nothing</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public object ActiveWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActiveWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveWindow () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActiveWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="471b1-112">返回一个对象，该对象表示最顶层的 Microsoft Outlook 窗口在桌面上，或者<see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />或<see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-112">Returns an object representing the topmost Microsoft Outlook window on the desktop, either an <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  or an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-113">一个对象，表示在桌面上最顶层的 Microsoft Outlook 窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-113">An Object that represents the topmost Microsoft Outlook window on the desktop.</span>
          </span>
          <span data-ttu-id="471b1-114">如果没有 Outlook 浏览器或检查器处于打开状态，则返回 <b>Nothing</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-114">Returns <b>Nothing</b> if no Outlook explorer or inspector is open.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Search AdvancedSearch (string Scope, object Filter, object SearchSubFolders, object Tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Search AdvancedSearch([in]string Scope, [in]object Filter, [in]object SearchSubFolders, [in]object Tag) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedSearch (Scope As String, Optional Filter As Object, Optional SearchSubFolders As Object, Optional Tag As Object) As Search" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Search</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Scope" Type="System.String" />
        <Parameter Name="Filter" Type="System.Object" />
        <Parameter Name="SearchSubFolders" Type="System.Object" />
        <Parameter Name="Tag" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Scope">
          <span data-ttu-id="471b1-p104">搜索范围。例如文件夹路径。建议使用单引号引起文件夹路径。否则，如果文件夹路径包含特殊字符（包括 Unicode 字符），搜索可能不会返回正确结果。若要指定多个文件夹路径，请用单引号引起每个文件夹路径，然后再用逗号隔开这些文件夹路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p104">The scope of the search. For example, the folder path of a folder. It is recommended that the folder path  is enclosed within single quotes. Otherwise, the search might not return correct results if the folder path contains special characters including Unicode characters. To specify multiple folder paths, enclose each folder path in single quotes and separate the single quoted folder paths with a comma.</span>
          </span>
        </param>
        <param name="Filter">
          <span data-ttu-id="471b1-120">定义搜索参数的 DASL 搜索筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-120">The DASL search filter that defines the parameters of the search.</span>
          </span>
        </param>
        <param name="SearchSubFolders">
          <span data-ttu-id="471b1-121">确定搜索是否包括文件夹的子文件夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-121">Determines if the search will include any of the folder's subfolders.</span>
          </span>
        </param>
        <param name="Tag">
          <span data-ttu-id="471b1-122">指定作为搜索标识符的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-122">The name given as an identifier for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-123">根据指定的 DAV 搜索和定位 (DASL) 搜索字符串进行搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-123">Performs a search based on a specified DAV Searching and Locating (DASL) search string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-124">A<see cref="T:Microsoft.Office.Interop.Outlook.Search" />对象，表示搜索结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-124">A <see cref="T:Microsoft.Office.Interop.Outlook.Search" /> object that represents the results of the search.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-125">
            <para>您可以通过调用中的代码的连续行的<b>AdvancedSearch</b>方法同时运行多个搜索。但是，您应注意： 以编程方式创建大量的搜索文件夹会导致在会影响 Outlook 的性能的重要同时搜索活动 Outlook 经营 online 的 Exchange 模式中的搜索尤其。</para>
            <para>
              <b>AdvancedSearch</b>方法和 Outlook 对象模型中的相关的功能不会创建搜索文件夹将出现在 Outlook 用户界面。但是，您可以使用<see cref="M:Microsoft.Office.Interop.Outlook.Search.Save(System.String)" />方法返回的搜索文件夹列表中的 Outlook 用户界面创建搜索文件夹显示的搜索对象。</para>
            <para>使用<paramref name="Scope" />参数，您可以在同一个存储中，指定一个或多个文件夹，但不是能在多个存储区中指定多个文件夹。若要指定多个文件夹为<paramref name="Scope" />参数，用逗号隔开每个文件夹路径，并将每个文件夹路径括在单引号。对于如收件箱或已发送邮件的默认文件夹，您可以使用简单的文件夹名称而不是完整文件夹路径。例如，下面的代码行表示有效<paramref name="Scope" />参数：</para>
            <code>Dim Scope As String = "'Inbox', 'Sent Items'"</code>
            <code>string Scope = "'Inbox', 'Sent Items'";</code>
            <code>Dim Scope1 As String = "'" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath &amp;amp; _
    "','" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath</code>
            <code>string Scope1 = "'" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath + 
    "','" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath;</code>
            <para>
              <paramref name="Filter" />参数可以是任何有效的 DASL 查询。DASL 查询的其他信息，请参阅筛选项目和通过 Namespace 引用属性。请注意，不能使用 JET 查询的<paramref name="Filter" />的高级搜索参数。如果包含在指定的文件夹的存储区启用即时搜索<paramref name="Scope" />参数，您可以使用即时搜索关键字来提高您的搜索的性能。如果您使用即时搜索关键字和不启用即时搜索，Outlook 将返回错误和搜索将失败。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-125">
              <para>You can run multiple searches simultaneously by calling the <b>AdvancedSearch</b> method in successive lines of code. However, you should be aware that programmatically creating a large number of search folders can result in significant simultaneous search activity that would affect the performance of Outlook, especially if Outlook conducts the search in online Exchange mode.</para>
              <para>The <b>AdvancedSearch</b> method and related features in the Outlook object model do not create a Search Folder that will appear in the Outlook user interface. However, you can use the <see cref="M:Microsoft.Office.Interop.Outlook.Search.Save(System.String)" /> method of the Search object that is returned to create a Search Folder that will appear in the Search Folders list in the Outlook user interface.</para>
              <para>Using the <paramref name="Scope" /> parameter, you can specify one or more folders in the same store, but you may not specify multiple folders in multiple stores. To specify multiple folders for the <paramref name="Scope" /> parameter, use a comma character between each folder path and enclose each folder path in single quotes. For default folders such as Inbox or Sent Items, you can use the simple folder name instead of the full folder path. For example, the following lines of code represent valid <paramref name="Scope" /> parameters:</para>
              <code>Dim Scope As String = "'Inbox', 'Sent Items'"</code>
              <code>string Scope = "'Inbox', 'Sent Items'";</code>
              <code>Dim Scope1 As String = "'" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath &amp;amp; _
    "','" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath</code>
              <code>string Scope1 = "'" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath + 
    "','" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath;</code>
              <para>The <paramref name="Filter" /> parameter can be any valid DASL query. For additional information on DASL queries, see Filtering Items and Referencing Properties by Namespace. Note that you cannot use a JET query for the <paramref name="Filter" /> parameter of Advanced Search. If Instant Search is enabled on a store that contains a folder specified in the <paramref name="Scope" /> parameter, you can use Instant Search keywords to improve the performance of your search. If you use Instant Search keywords and Instant Search is not enabled, Outlook will return an error and your search will fail.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-126">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-126">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-127">返回<see cref="T:Microsoft.Office.Interop.Outlook.Application" />表示 Outlook application 对象的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-127">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="471b1-128">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64520)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-129">返回一个<a href="http://go.microsoft.com/fwlink/?LinkId=87944">IAssistance</a></span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-129">Returns an <a href="http://go.microsoft.com/fwlink/?LinkId=87944">IAssistance</a></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-130">
            <para>有关<b>IAssistance</b>的详细信息，请参阅 2007 Microsoft Office system 的对象库参考。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-130">
              <para>For more information on <b>IAssistance</b>, see the Object Library Reference for the 2007 Microsoft Office system.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-131">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-131">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-132">返回<see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" />常量，指示对象的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-132">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="471b1-133">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-133">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-134">返回表示所有组件对象模型 (COM) 加载当前加载Microsoft Outlook <b>COMAddIns</b> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-134">Returns a <b>COMAddIns</b> collection that represents all the Component Object Model (COM) add-ins currently loaded in Microsoft Outlook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public object CopyFile (string FilePath, string DestFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyFile([in]string FilePath, [in]string DestFolderPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFile (FilePath As String, DestFolderPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CopyFile(System::String ^ FilePath, System::String ^ DestFolderPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64098)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="DestFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FilePath">
          <span data-ttu-id="471b1-135">要复制的对象的路径名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-135">The path name of the object you want to copy.</span>
          </span>
        </param>
        <param name="DestFolderPath">
          <span data-ttu-id="471b1-136">要将文件复制到的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-136">The location you want to copy the file to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-137">将文件从指定位置复制到 Microsoft Outlook 存储区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-137">Copies a file from a specified location into a Microsoft Outlook store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-138">表示复制的文件的 <b>对象</b> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-138">An <b>Object</b> value that represents the copied file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="public object CreateItem (Microsoft.Office.Interop.Outlook.OlItemType ItemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateItem([in]valuetype Microsoft.Office.Interop.Outlook.OlItemType ItemType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItem (ItemType As OlItemType) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateItem(Microsoft::Office::Interop::Outlook::OlItemType ItemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ItemType" Type="Microsoft.Office.Interop.Outlook.OlItemType" />
      </Parameters>
      <Docs>
        <param name="ItemType">
          <span data-ttu-id="471b1-139">新项 Outlook 项目类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-139">The Outlook item type for the new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-140">创建并返回一个新的 Microsoft Outlook 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-140">Creates and returns a new Microsoft Outlook item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-141">一个代表新 Outlook 项目的 <b>Object</b> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-141">An <b>Object</b> value that represents the new Outlook item.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-142">
            <para>
              <b>CreateItem</b>方法只能创建默认 Outlook 项目。若要创建使用自定义窗体的新项目，请使用<see cref="M:Microsoft.Office.Interop.Outlook._Items.Add(System.Object)" />方法<see cref="T:Microsoft.Office.Interop.Outlook.Items" />集合。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-142">
              <para>The <b>CreateItem</b> method can only create default Outlook items. To create new items using a custom form, use the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Add(System.Object)" />  method on the <see cref="T:Microsoft.Office.Interop.Outlook.Items" />  collection.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemFromTemplate">
      <MemberSignature Language="C#" Value="public object CreateItemFromTemplate (string TemplatePath, object InFolder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateItemFromTemplate([in]string TemplatePath, [in]object InFolder) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateItemFromTemplate(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemFromTemplate (TemplatePath As String, Optional InFolder As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TemplatePath" Type="System.String" />
        <Parameter Name="InFolder" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TemplatePath">
          <span data-ttu-id="471b1-143">新项目的 Outlook 模板的路径与文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-143">The path and file name of the Outlook template for the new item.</span>
          </span>
        </param>
        <param name="InFolder">
          <span data-ttu-id="471b1-p107">将在其中创建项目的文件夹。如果忽略此参数，将使用此项目类型的默认文件夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p107">The folder in which the item is to be created. If this argument is omitted, the default folder for the item type will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-146">根据 Outlook 模板 (.oft) 创建一个新的 Microsoft Outlook 项目并返回这一新项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-146">Creates a new Microsoft Outlook item from an Outlook template (.oft) and returns the new item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-147">一个代表新的 Microsoft Outlook 项目的<b>Object</b>值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-147">An <b>Object</b> value that represents the new Microsoft Outlook item.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-148">
            <para>新项目始终将打开在撰写模式下，而不是阅读模式下，无论在其中保存项目的模式到磁盘。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-148">
              <para>New items will always open in compose mode, as opposed to read mode, regardless of the mode in which the items were saved to disk.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string ObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject([in]string ObjectName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (ObjectName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ ObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ObjectName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ObjectName">
          <span data-ttu-id="471b1-149">要创建的对象的类名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-149">The class name of the object to create.</span>
          </span>
          <span data-ttu-id="471b1-150">有关有效类名的信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87946">OLE 编程标识符</a></span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-150">For information about valid class names, see <a href="http://go.microsoft.com/fwlink/?LinkId=87946">OLE Programmatic Identifiers</a></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-151">创建指定类的 Automation 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-151">Creates an Automation object of the specified class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-152">一个代表新的自动化对象实例的<b>对象</b>值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-152">An <b>Object</b> value that represents the new Automation object instance.</span>
          </span>
          <span data-ttu-id="471b1-153">如果应用程序已在运行， <b>无论</b> 将创建一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-153">If the application is already running, <b>CreateObject</b> will create a new instance.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-154">
            <para>提供此方法，以便其他应用程序可以自动从 Microsoft Visual Basic Scripting Edition (VBScript) 1.0，其中不包括<b>CreateObject</b>方法。在 VBScript 2.0 及更高版本中包括了<b>CreateObject</b> 。此方法不应用于 VBScript 从 Microsoft Outlook 的自动化。</para>
            <para>
              <b>注意</b>： 此帮助文件 （单击"示例"时可用） 中的代码示例中常用的<b>CreateObject</b>方法可供 Microsoft Visual Basic 或 Microsoft Visual Basic for Applications (VBA)。这些示例执行<paramref name="not" />作为 Outlook 中的对象模型的一部分使用相同的<b>CreateObject</b>方法实现。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-154">
              <para>This method is provided so that other applications can be automated from Microsoft Visual Basic Scripting Edition (VBScript) 1.0, which did not include a  <b>CreateObject</b> method. <b>CreateObject</b> has been included in VBScript version 2.0 and later. This method should not be used to automate Microsoft Outlook from VBScript.</para>
              <para>
                <b>Note</b>: The <b>CreateObject</b> methods commonly used in the example code within this Help file (available when you click "Example") are made available by Microsoft Visual Basic or Microsoft Visual Basic for Applications (VBA). These examples do <paramref name="not" /> use the same <b>CreateObject</b> method that is implemented as part of the object model in Outlook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProfileName">
      <MemberSignature Language="C#" Value="public string DefaultProfileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProfileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.DefaultProfileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultProfileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProfileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64214)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64214)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-155">返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 表示的默认配置文件名称的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-155">Returns a <b>String</b> (<b>string</b> in C#) representing the name of the default profile name.</span>
          </span>
          <span data-ttu-id="471b1-156">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-156">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-157">
            <para>如果已配置没有配置文件或者 outlook 没有默认配置文件，则返回空字符串。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-157">
              <para>Returns an empty string if no profile has been configured or if there is no default profile for Outlook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Explorers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Explorers Explorers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Explorers Explorers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Explorers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Explorers As Explorers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Explorers ^ Explorers { Microsoft::Office::Interop::Outlook::Explorers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Explorers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-158">返回<see cref="T:Microsoft.Office.Interop.Outlook.Explorers" />集合对象，它包含<see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />代表所有打开的 explorers 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-158">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Explorers" />  collection object that contains the <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  objects representing all open explorers.</span>
          </span>
          <span data-ttu-id="471b1-159">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-159">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-160">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-160">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace GetNamespace (string Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.NameSpace GetNamespace([in]string Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespace (Type As String) As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::NameSpace ^ GetNamespace(System::String ^ Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="471b1-161">要返回的命名空间的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-161">The type of name space to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-162">返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-162">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-163">表示指定的命名空间的 <b>命名空间</b> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-163">A <b>NameSpace</b> object that represents the specified namespace.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-164">
            <para>仅支持命名空间类型是"MAPI"。<b>GetNameSpace</b>方法等效于<b>会话</b>属性在 Microsoft Outlook 98 中引入。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-164">
              <para>The only supported name space type is "MAPI". The <b>GetNameSpace</b> method is functionally equivalent to the <b>Session</b> property, which was introduced in Microsoft Outlook 98.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewNickNames">
      <MemberSignature Language="C#" Value="public void GetNewNickNames (ref object pvar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNewNickNames([in]object&amp; pvar) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetNewNickNames(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNewNickNames (ByRef pvar As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNewNickNames(System::Object ^ % pvar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64072)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pvar" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pvar">To be added.</param>
        <summary>
          <span data-ttu-id="471b1-165">此对象、成员或枚举已被弃用并且不适合在您的代码中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-165">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectReference">
      <MemberSignature Language="C#" Value="public object GetObjectReference (object Item, Microsoft.Office.Interop.Outlook.OlReferenceType ReferenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObjectReference([in]object Item, [in]valuetype Microsoft.Office.Interop.Outlook.OlReferenceType ReferenceType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetObjectReference(System.Object,Microsoft.Office.Interop.Outlook.OlReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectReference (Item As Object, ReferenceType As OlReferenceType) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectReference(System::Object ^ Item, Microsoft::Office::Interop::Outlook::OlReferenceType ReferenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="ReferenceType" Type="Microsoft.Office.Interop.Outlook.OlReferenceType" />
      </Parameters>
      <Docs>
        <param name="Item">
          <span data-ttu-id="471b1-166">从中获取强或弱对象引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-166">The object from which to obtain a strong or weak object reference.</span>
          </span>
        </param>
        <param name="ReferenceType">
          <span data-ttu-id="471b1-167">对象引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-167">The type of object reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-168">为指定的 Outlook 对象创建一个强或弱对象引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-168">Creates a strong or weak object reference for a specified Outlook object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-169">
            <b>对象</b> ，表示强或弱对象引用指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-169">An <b>Object</b> that represents a strong or weak object reference for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-170">
            <para>此方法返回的中指定的对象的弱或强对象引用<paramref name="Item" />。</para>
            <para>
              <b>注释</b>： Outlook 可能无法成功关闭如果外接程序保留强对象引用。始终取消引用的强对象引用，一旦它不再需要该加载项。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-170">
              <para>This method returns a weak or strong object reference for the object specified in <paramref name="Item" />.</para>
              <para>
                <b>Note</b>: Outlook can fail to close successfully if an add-in retains strong object references. Always dereference a strong object reference once it is no longer needed by the add-in.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspectors Inspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspectors Inspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Inspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspectors As Inspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspectors ^ Inspectors { Microsoft::Office::Interop::Outlook::Inspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-171">返回<see cref="T:Microsoft.Office.Interop.Outlook.Inspectors" />集合对象，它包含<see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />代表所有打开的 inspectors 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-171">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspectors" />  collection object that contains the <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  objects representing all open inspectors.</span>
          </span>
          <span data-ttu-id="471b1-172">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-172">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSearchSynchronous (string LookInFolders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSearchSynchronous([in]string LookInFolders) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.IsSearchSynchronous(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSearchSynchronous (LookInFolders As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSearchSynchronous(System::String ^ LookInFolders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LookInFolders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="LookInFolders">
          <span data-ttu-id="471b1-p113">将要在其中进行搜索的文件夹的路径名。必须用单引号将文件夹路径引起来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p113">The path name of the folders that the search will search through. You must enclose the folder path  with single quotes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-175">返回一个<b>boolean 类型的值</b>(C# 中<b>bool</b> )，该值指示如果搜索是同步还是异步。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-175">Returns a <b>Boolean</b> (<b>bool</b> in C#) indicating if a search will be synchronous or asynchronous.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="471b1-176">
            <b>如此</b> 如果搜索是同步的;否则为 <b>假</b> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-176">
              <b>True</b> if the search is synchronous; otherwise, <b>False</b>.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="471b1-177">
            <para>如果搜索是同步的<see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" />方法不会返回搜索完成之前。相反，如果搜索是异步的将立即返回<b>AdvancedSearch</b>方法。若要从异步搜索获取有意义的结果，请使用<see cref="E:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event.AdvancedSearchComplete" />事件搜索已完成时通知您。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-177">
              <para>If the search is synchronous, the <see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" /> method will not return until the search has completed. Conversely, if the search is asynchronous, the <b>AdvancedSearch</b> method will immediately return. In order to get meaningful results from an asynchronous search, use the <see cref="E:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event.AdvancedSearchComplete" /> event to notify you when the search has finished.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrusted">
      <MemberSignature Language="C#" Value="public bool IsTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrusted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.IsTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTrusted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-178">返回一个<b>boolean 类型的值</b>(<b>bool</b> C# 中) 以指示是否外接程序或外部呼叫者将被视为受信任的 outlook。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-178">Returns a <b>Boolean</b> (<b>bool</b> in C#) to indicate if an add-in or external caller is considered trusted by Outlook.</span>
          </span>
          <span data-ttu-id="471b1-179">只读</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-179">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-180">
            <para>进程外呼叫者实例化的<see cref="T:Microsoft.Office.Interop.Outlook.Application" />对象， <b>IsTrusted</b>始终返回<b>False</b>。  Outlook 加载项，为<b>IsTrusted</b>返回<b>True</b> ，当且仅当外接程序被视为受信任的 outlook。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-180">
              <para>For out-of-process callers that have instantiated the <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object, <b>IsTrusted</b> always returns <b>False</b>.   For Outlook add-ins, <b>IsTrusted</b> returns <b>True</b> if and only if the add-in is considered trusted by Outlook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-181">返回的<a href="http://go.microsoft.com/fwlink/?LinkId=87945">LanguageSettings</a></span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-181">Returns a <a href="http://go.microsoft.com/fwlink/?LinkId=87945">LanguageSettings</a></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-182">返回一个代表对象的显示名称的<b>字符串</b>（C# 中的<b>字符串</b>） 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-182">Returns a <b>String</b> (<b>string</b> in C#) value that represents the display name for the object.</span>
          </span>
          <span data-ttu-id="471b1-183">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-183">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-p116">返回指定对象的 <b>对象</b> 的父级。只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p116">Returns the parent <b>Object</b> of the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickerDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.PickerDialog PickerDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.PickerDialog PickerDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.PickerDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PickerDialog As PickerDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::PickerDialog ^ PickerDialog { Microsoft::Office::Core::PickerDialog ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.PickerDialog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-186">返回<see cref="T:Microsoft.Office.Core.PickerDialog" />对象，它提供了功能，以选择对话框中的人员或数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-186">Returns a <see cref="T:Microsoft.Office.Core.PickerDialog" /> object that provides the functionality to select people or data in a dialog box.</span>
          </span>
          <span data-ttu-id="471b1-187">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-187">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-188">
            <para>
              <b>PickerDialog</b>对象位于 Microsoft Office 类型库中。有关详细信息，请参阅下列对象和及其成员：</para>
            <list type="bullet">
              <item>
                <para>
                  <b>PickerDialog</b>
                </para>
              </item>
              <item>
                <para>
                  <see cref="T:Microsoft.Office.Core.PickerField" />
                </para>
              </item>
              <item>
                <para>
                  <see cref="T:Microsoft.Office.Core.PickerFields" />
                </para>
              </item>
              <item>
                <para>
                  <see cref="T:Microsoft.Office.Core.PickerProperties" />
                </para>
              </item>
              <item>
                <para>
                  <see cref="T:Microsoft.Office.Core.PickerProperty" />
                </para>
              </item>
              <item>
                <para>
                  <see cref="T:Microsoft.Office.Core.PickerResult" />
                </para>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-188">
              <para>The <b>PickerDialog</b> object is available in the Microsoft Office type library. For more information, see the following objects and their members:</para>
              <list type="bullet">
                <item>
                  <para>
                    <b>PickerDialog</b>
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerField" />
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerFields" />
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerProperties" />
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerProperty" />
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerResult" />
                  </para>
                </item>
                <item>
                  <para>
                    <see cref="T:Microsoft.Office.Core.PickerResults" />
                  </para>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-189">返回一个<b>字符串</b>（C# 中的<b>字符串</b>） 指定的 Microsoft Outlook<a href="http://go.microsoft.com/fwlink/?LinkId=87946">全局唯一标识符 (GUID)</a></span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-189">Returns a <b>String</b> (<b>string</b> in C#) specifying the Microsoft Outlook <a href="http://go.microsoft.com/fwlink/?LinkId=87946">globally unique identifier (GUID)</a></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="471b1-190">关闭当前所有打开的窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-190">Closes all currently open windows.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="471b1-191">
            <para>完全; 关闭相关的 Outlook 会话在邮件系统中注销用户并丢弃对项目尚未保存的任何更改。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-191">
              <para>The associated Outlook session is closed completely; the user is logged out of the messaging system and any changes to items not already saved are discarded.  </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshFormRegionDefinition">
      <MemberSignature Language="C#" Value="public void RefreshFormRegionDefinition (string RegionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshFormRegionDefinition([in]string RegionName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.RefreshFormRegionDefinition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshFormRegionDefinition (RegionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshFormRegionDefinition(System::String ^ RegionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64639)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RegionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="RegionName">
          <span data-ttu-id="471b1-p118">要在缓存中刷新其定义的窗体区域的内部名称。若要刷新所有窗体区域定义，请指定空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-p118">The internal name of the form region whose definition you want to refresh in the cache. To refresh all form region definitions, specify an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="471b1-194">从 Windows 注册表中，获取为本地计算机和当前用户定义的一个或所有窗体区域的当前定义，以刷新缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-194">Refreshes the cache by obtaining the current definition from the Windows registry for one or all of the form regions that are defined for the local machine and the current user.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="471b1-195">
            <para>Microsoft Outlook 启动时，它读取 Windows 注册表以获取窗体区域的列表和及其定义，然后缓存数据。定义存储在本地计算机密钥 （作为 HKEY_LOCAL_MACHINE\Software\Microsoft\Office\Outlook\FormRegions) 和 （作为 HKEY_CURRENT_USER\Software\Microsoft\Office\Outlook\FormRegions) 当前用户注册表项下在注册表中。定义介绍布局、 行为和每个窗体区域的其他特征。如果您在注册窗体区域或在 Outlook 启动之后，修改窗体区域的定义，您可以使用<b>RefreshFormRegionDefinition</b>方法以指示 Outlook 以获取更新的信息。</para>
            <para>
              <paramref name="RegionName" />参数应匹配<see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" />窗体区域要刷新其定义的属性。窗体区域的内部名称只支持 ASCII 字符。如果您指定为空字符串，Outlook 读取 Windows 注册表以获取所有为本地计算机和当前用户定义的窗体区域的定义。</para>
            <para>有关注册窗体区域的详细信息，请参阅在 Windows 注册表中指定窗体区域。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-195">
              <para>When Microsoft Outlook starts, it reads the Windows registry to obtain a list of form regions and their definitions, and then caches the data. The definitions are stored in the registry under the local machine key (as HKEY_LOCAL_MACHINE\Software\Microsoft\Office\Outlook\FormRegions) and under the current user key (as HKEY_CURRENT_USER\Software\Microsoft\Office\Outlook\FormRegions). The definitions describe the layout, behavior, and other characteristics of each form region. If you register a form region or modify the definition of a form region after Outlook starts, you can use the <b>RefreshFormRegionDefinition</b> method to instruct Outlook to obtain the updated information.</para>
              <para>The <paramref name="RegionName" /> argument should match the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> property of the form region whose definition you are refreshing. The internal name of a form region supports only ASCII characters. If you specify an empty string, Outlook reads the Windows registry to obtain definitions for all of the form regions that are defined for the local machine and the current user.</para>
              <para>For more information about registering form regions, see Specifying Form Regions in the Windows Registry.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reminders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Reminders Reminders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Reminders Reminders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Reminders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reminders As Reminders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Reminders ^ Reminders { Microsoft::Office::Interop::Outlook::Reminders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64153)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Reminders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-196">返回<see cref="T:Microsoft.Office.Interop.Outlook.Reminders" />集合，代表所有当前提醒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-196">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Reminders" /> collection that represents all current reminders.</span>
          </span>
          <span data-ttu-id="471b1-197">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-197">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-198">返回<see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />对象的当前会话。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-198">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="471b1-199">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-199">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-200">
            <para>
              <b>Session</b>属性和<see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />可以交替使用方法来获取当前会话的<b>NameSpace</b>对象。这两个成员的作用相同。例如，以下语句对执行相同的功能：</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-200">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZones">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.TimeZones TimeZones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.TimeZones TimeZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.TimeZones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeZones As TimeZones" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::TimeZones ^ TimeZones { Microsoft::Office::Interop::Outlook::TimeZones ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.TimeZones</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-201">返回<see cref="T:Microsoft.Office.Interop.Outlook.TimeZones" />表示的 Outlook 支持的时区集的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-201">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.TimeZones" /> collection that represents the set of time zones supported by Outlook.</span>
          </span>
          <span data-ttu-id="471b1-202">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-202">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="471b1-203">
            <para>支持的 Outlook 的时区集基于存储在 Windows 注册表项 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones 中的数据。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-203">
              <para>The set of time zones supported by Outlook is based on the data stored in  the Windows registry key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(278)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="471b1-204">返回或设置一个<b>字符串</b>（C# 中的<b>字符串</b>），该值指示版本数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-204">Returns or sets a <b>String</b> (<b>string</b> in C#) indicating the number of the version.</span>
          </span>
          <span data-ttu-id="471b1-205">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="471b1-205">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>