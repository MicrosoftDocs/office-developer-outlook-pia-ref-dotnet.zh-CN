<Type Name="_FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook._FormRegionStartup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b34bd4c4bdf22fffb31f02727f5872c4371b275f" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20633180" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94fe2-101">这是与相应的 COM 对象的互操作性的托管代码需要 COM coclass 中的主接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94fe2-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="94fe2-102">仅当您想要使用的方法共享相同的名称的 COM 对象; 事件时，才使用此主接口在这种情况下，强制转换为此接口调用方法，并强制转换为最新的事件接口，连接到该事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94fe2-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="94fe2-103">否则，使用.NET 接口派生自 COM coclass 访问方法、 属性和事件的 COM 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94fe2-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="94fe2-104">有关 COM 对象的信息，请参阅<see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94fe2-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeFormRegionShow">
      <MemberSignature Language="C#" Value="public void BeforeFormRegionShow (Microsoft.Office.Interop.Outlook.FormRegion FormRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeFormRegionShow([in]class Microsoft.Office.Interop.Outlook.FormRegion FormRegion) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeFormRegionShow(Microsoft::Office::Interop::Outlook::FormRegion ^ FormRegion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegion" Type="Microsoft.Office.Interop.Outlook.FormRegion" />
      </Parameters>
      <Docs>
        <param name="FormRegion">
          <span data-ttu-id="94fe2-105">表示要显示的窗体区域的 <b>FormRegion</b> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-105">The <b>FormRegion</b> object representing the form region that is to be displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94fe2-106">允许加载项在显示窗体区域之前先更新窗体区域的用户界面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-106">Allows an add-in to update the user interface of a form region before it is displayed.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="94fe2-107">
            <para>此方法允许 Outlook 将<b>FormRegion</b>对象传递到该加载项，并允许外接程序更新窗体区域的用户界面以便，例如，可以更改的标签文本或可以取消无关内容显示之前。调用后控件进行实例化和计算的布局，但之前窗体区域变为可见。</para>
            <para>实现此方法时，请记住，从获取的项目<paramref name="FormRegion" />参数 (即， <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /><b>FormRegion</b>对象的属性) 是只读的。</para>
            <para>的加载项 C# 和 Visual Basic.NET 来实现<b>FormRegionStartup</b>的示例，请参阅 MSDN 上的代码示例下载。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-107">
              <para>This method lets Outlook pass the <b>FormRegion</b> object to the add-in, and allows an add-in to update the user interface of the form region before it is displayed so that, for instance, the text of labels can be changed or irrelevant content can be suppressed. It is called after the controls are instantiated and the layout is calculated, but before the form region is made visible. </para>
              <para>When implementing this method, keep in mind that the item obtained from the <paramref name="FormRegion" /> parameter (that is, the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> property of the <b>FormRegion</b> object) is read-only.</para>
              <para>For examples of add-ins in C# and  Visual Basic .NET that implement <b>FormRegionStartup</b>, see code sample downloads on MSDN.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionIcon">
      <MemberSignature Language="C#" Value="public object GetFormRegionIcon (string FormRegionName, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionIcon([in]string FormRegionName, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionIcon (FormRegionName As String, LCID As Integer, Icon As OlFormRegionIcon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionIcon(System::String ^ FormRegionName, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionIcon Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="Icon" Type="Microsoft.Office.Interop.Outlook.OlFormRegionIcon" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="94fe2-108">在 Windows 注册表中注册窗体区域时使用的窗体区域的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-108">The name of the form region which is the name used when registering the form region in the Windows registry.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="94fe2-p102">标识 Outlook 当前使用的语言的区域设置 ID。此值用于获取与窗体区域的此语言相对应的本地化字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-p102">The locale ID  that identifies the language that  Outlook is currently  using. This value is used to obtain the localization strings corresponding to this language for the form region.</span>
          </span>
        </param>
        <param name="Icon">
          <span data-ttu-id="94fe2-111">一个标识图标类型的常量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-111">A constant that identifies the type of icon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94fe2-112">获取一个将为窗体区域的特定类型图标显示的图标图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-112">Obtains an icon image that will be displayed for a particular type of icon for the form region.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94fe2-113">一个<b>对象</b>，它代表图像文件的原始字节的字节数组或一个<b>IPictureDisp</b>对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-113">An <b>Object</b> that is either a byte-array that represents the original bytes of the image file or an <b>IPictureDisp</b> object.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="94fe2-114">
            <para>此方法是应由外接程序来实现，并由 Outlook 调用。一部分<see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />接口，此方法和<see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />方法提供一种机制，通过该外接程序可以注册窗体区域并提供 Outlook 的 XML 指令清单的图标与窗体区域。</para>如果您希望外接程序提供窗体区域的图标在 Windows 注册表中注册窗体区域时指定 ProgID 的外接程序， 
          <para>。有关注册窗体区域的详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87933">在 Windows 注册表中指定窗体区域</a><b>GetFormRegionManifest</b>和<b>FormRegionStartup</b>接口的<b>GetFormRegionIcon</b>方法。</para><para>中 XML 清单的窗体区域，在 icons 元素，指定您想要使用自定义图标的子元素的每个值外接程序。 实现<b>GetFormRegionIcon</b> ，以便当 Outlook 作为参数传入的图标的类型<paramref name="Icon" />， <b>GetFormRegionIcon</b>返回的自定义图标的图像。如果您希望 Outlook 显示的默认图标，实现<b>GetFormRegionIcon</b> ，以便返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#） 图标的类型。<b>GetFormRegionIcon</b>还应时返回<b>Nothing</b> （中的空引用 (在 Visual Basic 中为 Nothing) C#）<paramref name="Icon" />是<b>olFormRegionIconDefault</b>。</para><para>当 Outlook 启动时，从 Windows 注册表中读取窗体区域的列表并将缓存与窗体区域关联的数据。如果窗体区域已注册 ProgID，Outlook 将通过调用来在 icons 元素的子元素的值与具有外接程序的 XML 指令清单中的任何图标<b>GetFormRegionIcon</b>其实现借助到相应的加载项中。请注意，是否您没有在 Windows 注册表中指定任何 ProgID，Outlook 将不调用<b>GetFormRegionManifest</b>和<b>GetFormRegionIcon</b>方法的调用。</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-114">
              <para>This method is intended to be implemented by an add-in and called by Outlook. As part of the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, this method and the <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> method provide a mechanism through which an add-in can register a form region and provide Outlook with the XML manifest and the icons for the form region.</para>
              <para>If you would like an add-in to provide icons for a form region, specify the ProgID of the add-in when you register the form region in the Windows registry. For more information on registering a form region, see <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Specifying Form Regions in the Windows Registry</a><b>GetFormRegionManifest</b> and the <b>GetFormRegionIcon</b> methods of the  <b>FormRegionStartup</b> interface. </para>
              <para>In the XML manifest for the form region, under the icons element, specify the value addin for each of the child elements where you would like to use a custom icon.  Implement <b>GetFormRegionIcon</b> such that when Outlook passes that type of icon as an argument for <paramref name="Icon" />,  <b>GetFormRegionIcon</b> returns the image of the custom icon. If you want Outlook to display the default icon, implement <b>GetFormRegionIcon</b> such that it returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) for that type of icon. <b>GetFormRegionIcon</b> should also return <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) when <paramref name="Icon" /> is <b>olFormRegionIconDefault</b>.</para>
              <para> When Outlook starts, it reads the list of form regions from the Windows registry and caches the data associated with the form regions. If a form region has been registered with a ProgID, Outlook will resort to the corresponding add-in by calling its implementation of <b>GetFormRegionIcon</b> for any icon in the XML manifest that has addin as the value of a child element of the icons element. Note that if you do not specify any ProgID in the Windows registry, Outlook will not call the  <b>GetFormRegionManifest</b> and <b>GetFormRegionIcon</b> methods.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionManifest">
      <MemberSignature Language="C#" Value="public object GetFormRegionManifest (string FormRegionName, int LCID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionManifest([in]string FormRegionName, [in]int32 LCID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionManifest (FormRegionName As String, LCID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionManifest(System::String ^ FormRegionName, int LCID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="94fe2-115">在 Windows 注册表中注册窗体区域时使用的窗体区域的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-115">The name of the form region which is the name used when registering the form region in the Windows registry.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="94fe2-p103">标识 Outlook 当前使用的语言的区域设置 ID。此值用于获取与窗体区域的此语言相对应的本地化字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-p103">The locale ID  that identifies the language that  Outlook is currently  using. This value is used to obtain the localization strings corresponding to this language for the form region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94fe2-118">获取窗体区域的 XML 清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-118">Obtains the XML manifest for a form region.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94fe2-119">一个<b>对象</b>，表示窗体区域的 XML 清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-119">An <b>Object</b> that represents the XML manifest for a form region.</span>
          </span>
          <span data-ttu-id="94fe2-120">此 XML 字符串包含窗体区域，如 （按照指定的 title 元素） 的显示名称、 任何相关的布局文件或加载项、 任何受支持的用户操作和任何本地化字符串的特征。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-120">This XML string includes characteristics of the form region such as the display name (as specified by the title element), any associated layout file or add-in,  any supported user actions, and any localization strings.</span>
          </span>
          <span data-ttu-id="94fe2-121">XML 必须按照窗体区域 XML 架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-121">The XML must follow the form region XML schema.</span>
          </span>
          <span data-ttu-id="94fe2-122">窗体区域 XML 架构的详细信息，请参阅<a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN 库</a>中 Microsoft Outlook 2010 XML 架构参考</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-122">For more information on the form region XML schema, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="94fe2-123">
            <para>此方法是应由外接程序来实现，并由 Outlook 调用。一部分<see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />接口，此方法和<see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />方法提供一种机制，通过该外接程序可以注册窗体区域并提供 Outlook 的 XML 指令清单和图标窗体区域。</para>如果您希望加载项提供 XML 清单窗体区域，在 Windows 注册表中注册窗体区域时指定 ProgID 的外接程序
          <para>。有关注册窗体区域的详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87933">在 Windows 注册表中指定窗体区域</a><b>GetFormRegionManifest</b>方法<b>FormRegionStartup</b>接口。请注意，是否您没有在 Windows 注册表中指定任何 ProgID，Outlook 将不调用此方法。</para><para>信赖上外接程序，以提供用于窗体区域的 XML 清单还意味着您已允许外接程序提供窗体区域的任何图标。外接程序还必须实现<b>FormRegionStartup</b>接口<b>GetFormRegionIcon</b> 。Outlook 将调用<b>GetFormRegionIcon</b>获取任何加载项指定的图标的窗体区域。使用外接程序来指定图标的详细信息，请参阅<a href="http://go.microsoft.com/fwlink/?LinkId=87934">如何： 使用窗体区域加载到指定的图标</a></para><para>当 Outlook 启动时，从 Windows 注册表中读取窗体区域的列表并缓存的数据。根据此数据，如果 Outlook 通知的外接程序已指定要为窗体区域中提供的 XML 指令清单，Outlook 将使用的缓存的数据和由获取此加载项实现的<b>GetFormRegionManifest</b>方法的调用中提供的 ProgID需要显示窗体区域 XML。如果 XML 指令清单无效，并且不符合窗体区域 XML 架构，Outlook 将不能加载窗体区域。此外，如果您没有在 Windows 注册表中指定任何 ProgID，Outlook 将不会调用<b>GetFormRegionManifest</b>和<b>GetFormRegionIcon</b>方法的调用。</para><para>当外接程序提供的 XML 清单时，outlook 会忽略以下元素：</para><list type="bullet"><item><para>名称： Outlook 忽略为此元素指定的值，将使用在注册表中为窗体区域指定的名称。</para></item><item><para>layoutFile： 由于加载项会扩展此窗体区域，Outlook 将忽略此元素。</para></item><item><para>addin: Outlook 使用注册表中前面带有等号 （=） 的值为 ProgID 的外接程序</para></item>stringOverride
            <item><para>文件属性： Outlook 将忽略 stringOverride 元素所指定的任何辅助本地化文件。外接程序可以实现<b>GetFormRegionManifest</b>返回为指定的字符串本地化的 XML 清单的内嵌<paramref name="LCID" />，或管理本地化字符串中的另一种方法，例如，使用.NET Framework 本地化，然后返回相应的 XML 指令清单指定<paramref name="LCID" />。</para></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-123">
              <para>This method is intended to be implemented by an add-in and called by Outlook. As part of the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, this method and the <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> method provide a mechanism through which an add-in can register a form region and provide Outlook the XML manifest and the icons for the form region.</para>
              <para>If you would like an add-in to provide the XML manifest for a form region, specify the ProgID of the add-in when you register the form region in the Windows registry. For more information on registering a form region, see <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Specifying Form Regions in the Windows Registry</a><b>GetFormRegionManifest</b> method of the  <b>FormRegionStartup</b> interface. Note that if you do not specify any ProgID in the Windows registry, Outlook will not call this method.</para>
              <para>Relying on an add-in to provide the XML manifest for a form region also means you are allowing the add-in to provide any icons for the form region. The add-in must also implement the <b>GetFormRegionIcon</b> of the <b>FormRegionStartup</b> interface. Outlook will call <b>GetFormRegionIcon</b> to obtain any add-in specified icons for the form region. For more information on using an add-in to specify icons, see <a href="http://go.microsoft.com/fwlink/?LinkId=87934">How to: Use an Add-in to Specify Icons for a Form Region</a></para>
              <para> When Outlook starts, it reads the list of form regions from the Windows registry and caches the data. Based on this data, if  Outlook notices that an add-in has been specified to provide the XML manifest for a form region, Outlook will use the ProgID provided in the cached data and call the <b>GetFormRegionManifest</b> method implemented by this add-in to obtain the XML it needs to display the form region. If the XML manifest is not valid and does not conform to the form region XML schema, Outlook will not be able to load the form region. Also, if you do not specify any ProgID in the Windows registry, Outlook will not call the  <b>GetFormRegionManifest</b> and <b>GetFormRegionIcon</b> methods.</para>
              <para>Outlook ignores the following elements when the add-in provides the XML manifest: </para>
              <list type="bullet">
                <item>
                  <para>name: Outlook ignores the value specified for this element and will  use the name  specified for the form region in the registry.</para>
                </item>
                <item>
                  <para>layoutFile: Outlook ignores this element because an add-in is extending this form region.</para>
                </item>
                <item>
                  <para>addin: Outlook uses the value that is preceded by an equal sign (=) in the registry as the ProgID of the add-in.</para>
                </item>
                <item>
                  <para>file attribute of stringOverride: Outlook ignores any secondary localization file specified by the stringOverride element. The add-in can implement <b>GetFormRegionManifest</b> to return inline the XML manifest for string localization for the specified <paramref name="LCID" />, or manage  string localization in another way, for example, using .NET Framework localization, and then return the appropriate XML manifest for the specified <paramref name="LCID" />.</para>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionStorage">
      <MemberSignature Language="C#" Value="public object GetFormRegionStorage (string FormRegionName, object Item, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionStorage([in]string FormRegionName, [in]object Item, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionStorage (FormRegionName As String, Item As Object, LCID As Integer, FormRegionMode As OlFormRegionMode, FormRegionSize As OlFormRegionSize) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionStorage(System::String ^ FormRegionName, System::Object ^ Item, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode, Microsoft::Office::Interop::Outlook::OlFormRegionSize FormRegionSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64310)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="FormRegionMode" Type="Microsoft.Office.Interop.Outlook.OlFormRegionMode" />
        <Parameter Name="FormRegionSize" Type="Microsoft.Office.Interop.Outlook.OlFormRegionSize" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="94fe2-124">窗体区域的内部名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-124">The internal name of the form region.</span>
          </span>
          <span data-ttu-id="94fe2-125">这可以由&lt;名称&gt;相应窗体区域 XML 清单中的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-125">This can be indicated by the &lt;name&gt; tag in the corresponding form region XML manifest.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="94fe2-126">导致加载窗体区域的 Outlook 项目对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-126">The Outlook item object that caused the loading of the form region.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="94fe2-127">当前的区域设置 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-127">The current locale ID.</span>
          </span>
        </param>
        <param name="FormRegionMode">
          <span data-ttu-id="94fe2-128">要将窗体区域加载到的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-128">The mode that  the form region is being loaded into.</span>
          </span>
        </param>
        <param name="FormRegionSize">
          <span data-ttu-id="94fe2-129">所加载的窗体区域的类型（相邻或独立）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-129">The type of form region being loaded, either adjoining or separate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94fe2-130">基于指定的信息获取窗体区域的相应存储。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-130">Obtains appropriate storage for a form region based on the specified information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94fe2-131">代表 Outlook 窗体区域已分配的存储<b>对象</b>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-131">A <b>Object</b> representing the storage that Outlook has allocated for the form region.</span>
          </span>
          <span data-ttu-id="94fe2-132">可以是返回值类型： <b>String</b> （C# 中的<b>字符串</b>） 表示的返回值 Outlook 窗体存储的本地路径 (。OFS) 文件;<b>Byte （)</b>表示的返回值是一个包含的内容的字节数组。OFS 文件;<b>IStorage</b>表示的返回值是 COM 存储对象 （适用于 c + + 仅）; <b>IStorage</b><b>Nothing</b>或<b>空</b>，表示 Outlook 无法为此窗体区域分配存储，并将不会加载窗体区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-132">The type of the return value can be: <b>String</b> (<b>string</b> in C#) representing that the return value is a local path to an Outlook Form Storage (.OFS) file; <b>Byte()</b> representing that the return value is an array of bytes that contains the contents of the .OFS file; <b>IStorage</b> representing that the return value is a COM storage object <b>IStorage</b> (for C++ only); <b>Nothing</b> or <b>Null</b>, representing that Outlook could not allocate storage for this form region and will not load the form region.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="94fe2-133">
            <para>外接程序必须检查<b>GetFormRegionStorage</b>的返回值。如果以下任一条件返回的存储，将不会加载窗体区域：</para>
            <list type="bullet">
              <item>
                <para>返回存储是。OFS 文件指定非本地路径。</para>
              </item>
              <item>
                <para>返回的存储是一个文件，但不是。从窗体设计器保存 OFS 文件。</para>
              </item>
            </list>
            <para>有关的加载项 C# 和 Visual Basic.NET 中实现的示例<see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />接口，请参阅 MSDN 上的代码示例下载。</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94fe2-133">
              <para>The add-in must check for the return value of <b>GetFormRegionStorage</b>. A form region will not load if any of the following is true of the returned storage:</para>
              <list type="bullet">
                <item>
                  <para>The returned storage is a .OFS file specified with a non-local path.</para>
                </item>
                <item>
                  <para>The returned storage is a file but is not an .OFS file saved from the forms designer.</para>
                </item>
              </list>
              <para>For examples of add-ins in C# and  Visual Basic .NET that implement the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, see code sample downloads on MSDN.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>