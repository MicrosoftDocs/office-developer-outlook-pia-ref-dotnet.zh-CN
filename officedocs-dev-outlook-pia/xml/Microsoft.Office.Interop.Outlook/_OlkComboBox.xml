<Type Name="_OlkComboBox" FullName="Microsoft.Office.Interop.Outlook._OlkComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c820bf50404a80db164080f3f14e21ad21d54c4c" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139605" /></Metadata><TypeSignature Language="C#" Value="public interface _OlkComboBox" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _OlkComboBox" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._OlkComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Interface _OlkComboBox" />
  <TypeSignature Language="C++ CLI" Value="public interface class _OlkComboBox" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000672DE-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e04b9-101">这是 COM coclass（托管代码需要此 Coclass 来实现与相应的 COM 对象的互操作性）中的主接口。</span><span class="sxs-lookup"><span data-stu-id="e04b9-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="e04b9-102">仅当您想要使用的方法与 COM 对象的事件共享同一名称时才使用此主接口；在这种情况下，转换为此接口以调用该方法，转换为最新的事件接口以连接到该事件。</span><span class="sxs-lookup"><span data-stu-id="e04b9-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="e04b9-103">否则，请使用派生自 COM coclass 的 .NET 接口来访问方法、属性和 COM 对象的事件。</span><span class="sxs-lookup"><span data-stu-id="e04b9-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="e04b9-104">有关 COM 对象的信息，请参阅 <see cref="T:Microsoft.Office.Interop.Outlook.OlkComboBox" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.OlkComboBox" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public void AddItem (string ItemText, object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddItem([in]string ItemText, [in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.AddItem(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddItem (ItemText As String, Optional Index As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ItemText" Type="System.String" />
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ItemText"><span data-ttu-id="e04b9-105">要添加到组合框列表中的值。</span><span class="sxs-lookup"><span data-stu-id="e04b9-105">Value to be added to the list in the combo box.</span></span></param>
        <param name="Index"><span data-ttu-id="e04b9-106">从 0 开始计数的值，指定新项目在列表中的顺序。</span><span class="sxs-lookup"><span data-stu-id="e04b9-106">A 0-based value that specifies the order of the new item in the list.</span></span></param>
        <summary><span data-ttu-id="e04b9-107">向列表中添加项目，另外为显示在列表中的新项目指定索引。</span><span class="sxs-lookup"><span data-stu-id="e04b9-107">Adds an item to the list, optionally specifying an index for the new item to appear in the list.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-108">如果 的值等于或大于列表中的元素数，则新项将添加到  <paramref name="Index" /> 列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="e04b9-108">If the value of  <paramref name="Index" /> is equal to or larger than the number of elements in the list, the new item will  be added to the end of the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-109">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) 自动调整控件大小以显示整个内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-109">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that automatically sizes the control to display  the entire contents.</span></span>  <span data-ttu-id="e04b9-110">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-110">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para>  <span data-ttu-id="e04b9-111">此属性的默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-111">The default value for this property is <b>False</b>.</span></span></para>
          <para><span data-ttu-id="e04b9-p103"><b>调整</b> 设置为 <b>True</b> 可自动设置显示区域的宽度的文本长度在组合框中。此行为是类似于单行文本框中。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p103">Setting <b>AutoSize</b> to <b>True</b> automatically sets the width of the display area to the length of the text in the combo box. This behavior is similar to the single-line text box. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoTab">
      <MemberSignature Language="C#" Value="public bool AutoTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoTab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-114">返回或设置一个 <b>boolean</b> (<b>bool</b> C#) 指定当控件已填充到指定的最大长度时是否自动插入选项卡。</span><span class="sxs-lookup"><span data-stu-id="e04b9-114">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies if a tab is inserted automatically  when the control has been filled to the maximum length specified.</span></span> <span data-ttu-id="e04b9-115">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-115">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para>  <span data-ttu-id="e04b9-116">此属性的默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-116">The default value for this property is <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelect">
      <MemberSignature Language="C#" Value="public bool AutoWordSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.AutoWordSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-117">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) ，用于指定单词或字符是扩展所选内容的基本单位。</span><span class="sxs-lookup"><span data-stu-id="e04b9-117">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether a word or a character is the basic unit used to extend a selection.</span></span>  <span data-ttu-id="e04b9-118">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-118">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-119">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="e04b9-119">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public uint BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 BackColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 BackColor { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.OLE_COLOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-120">返回或设置 <b>UInteger</b> (<b>uint</b> C#) 值，该值指示控件的背景色。</span><span class="sxs-lookup"><span data-stu-id="e04b9-120">Returns or sets a <b>UInteger</b> (<b>uint</b> in C#) value that indicates the background color of the control.</span></span> <span data-ttu-id="e04b9-121">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-121">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-122">此属性的类型为<b>uInteger</b> <b>OLE_COLOR值</b>中的 uint (<b>uint</b> C#) 类型。</span><span class="sxs-lookup"><span data-stu-id="e04b9-122">This property is of the type <b>OLE_COLOR</b> which is a <b>UInteger</b> (<b>uint</b> in C#) value.</span></span> <span data-ttu-id="e04b9-123">此属性的默认值是 0x80000005，"窗口。</span><span class="sxs-lookup"><span data-stu-id="e04b9-123">The default value for this property is 0x80000005, "Window."</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlBorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlBorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As OlBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlBorderStyle BorderStyle { Microsoft::Office::Interop::Outlook::OlBorderStyle get(); void set(Microsoft::Office::Interop::Outlook::OlBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-124">返回或设置 <see cref="T:Microsoft.Office.Interop.Outlook.OlBorderStyle" /> 一个常量，该常量定义控件边框的样式。</span><span class="sxs-lookup"><span data-stu-id="e04b9-124">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlBorderStyle" /> constant that defines the style of the  border  around the control.</span></span>   <span data-ttu-id="e04b9-125">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-125">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-126">默认值是 <b>olBorderStyleSingle</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-126">The default value is <b>olBorderStyleSingle</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e04b9-127">从组合框列表中删除所有对象。</span><span class="sxs-lookup"><span data-stu-id="e04b9-127">Removes all objects from the list in the combo box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e04b9-128">将控件的内容复制到剪贴板上。</span><span class="sxs-lookup"><span data-stu-id="e04b9-128">Copies the contents of the control to the clipboard.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-129">数据以无格式文本格式复制，用于替换剪贴板的现有内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-129">The data is copied in unformatted text format, replacing the existing contents of the clipboard.</span></span></para>
          <para><span data-ttu-id="e04b9-130">如果控件样式是 <b>olComboBoxStyleListBox</b> ，然后此方法复制当前所选内容的下拉列表中到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="e04b9-130">If the control style is <b>olComboBoxStyleListBox</b>, then this method copies the current selection in the drop-down list to the clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e04b9-131">删除控件的内容并将内容复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="e04b9-131">Removes the contents of the control and copies the contents to the clipboard.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-132">数据以无格式文本格式复制到剪贴板，用于替换剪贴板的现有内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-132">The data is copied to the clipboard in unformatted text format, replacing the existing contents of the clipboard.</span></span></para>
          <para><span data-ttu-id="e04b9-133">如果控件样式是 <b>olComboBoxStyleListBox</b> ，然后此方法将不剪切任何内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-133">If the control style is <b>olComboBoxStyleListBox</b>, then this method will not cut anything.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DragBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlDragBehavior DragBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlDragBehavior DragBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.DragBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DragBehavior As OlDragBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlDragBehavior DragBehavior { Microsoft::Office::Interop::Outlook::OlDragBehavior get(); void set(Microsoft::Office::Interop::Outlook::OlDragBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(225)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlDragBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-134">返回或设置一个常量，该常量指示系统是否为此控件启用 <see cref="T:Microsoft.Office.Interop.Outlook.OlDragBehavior" /> 拖放功能。</span><span class="sxs-lookup"><span data-stu-id="e04b9-134">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlDragBehavior" /> constant that indicates whether the system enables the drag-and-drop feature for this control.</span></span>  <span data-ttu-id="e04b9-135">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-135">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-136">默认值是 <b>olDragDropDisabled</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-136">The default value is <b>olDragDropDisabled</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public void DropDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DropDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e04b9-137">展开组合框的下拉部分。</span><span class="sxs-lookup"><span data-stu-id="e04b9-137">Expands  the drop-down portion of the combo box.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-138">模拟用户单击控件上的下拉按钮。</span><span class="sxs-lookup"><span data-stu-id="e04b9-138">Simulates the user clicking the drop button on the control.</span></span> <span data-ttu-id="e04b9-139">此方法将导致 <see cref="E:Microsoft.Office.Interop.Outlook.OlkComboBoxEvents_Event.DropButtonClick" /> 事件引发。</span><span class="sxs-lookup"><span data-stu-id="e04b9-139">This method causes the <see cref="E:Microsoft.Office.Interop.Outlook.OlkComboBoxEvents_Event.DropButtonClick" /> event to fire.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-140">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) 指示是否允许控件运行。</span><span class="sxs-lookup"><span data-stu-id="e04b9-140">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the control is allowed to function.</span></span>  <span data-ttu-id="e04b9-141">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-141">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-142">默认值为 <b>True</b>。</span><span class="sxs-lookup"><span data-stu-id="e04b9-142">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterFieldBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior EnterFieldBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior EnterFieldBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.EnterFieldBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property EnterFieldBehavior As OlEnterFieldBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior EnterFieldBehavior { Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior get(); void set(Microsoft::Office::Interop::Outlook::OlEnterFieldBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-143">返回或设置 <see cref="T:Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior" /> 一个常量，该常量指定进入控件时的选择行为。</span><span class="sxs-lookup"><span data-stu-id="e04b9-143">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlEnterFieldBehavior" /> constant that specifies the selection behavior when entering the control.</span></span> <span data-ttu-id="e04b9-144">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-144">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-145">默认值是 <b>olEnterFieldBehaviorSelectAll</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-145">The default value is <b>olEnterFieldBehaviorSelectAll</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public stdole.StdFont Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdFont Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As StdFont" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdFont ^ Font { stdole::StdFont ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdFont</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-146">返回 <b>StdFont</b> 表示用来呈现控件中的文本的字体。</span><span class="sxs-lookup"><span data-stu-id="e04b9-146">Returns a <b>StdFont</b> that represents the font used to render the text inside the control.</span></span>  <span data-ttu-id="e04b9-147">只读的。</span><span class="sxs-lookup"><span data-stu-id="e04b9-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-148">字体表示为 Microsoft Windows <b>stdfont 类型</b>。</span><span class="sxs-lookup"><span data-stu-id="e04b9-148">The font is expressed as the Microsoft Windows type <b>stdfont</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public uint ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ForeColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 ForeColor { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComAliasName("stdole.OLE_COLOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-149">返回或设置 <b>一个 uInteger</b> (<b>uint</b> C#) 值，该值指示控件的前景色。</span><span class="sxs-lookup"><span data-stu-id="e04b9-149">Returns or sets a <b>UInteger</b> (<b>uint</b> in C#) value that indicates the foreground color of the control.</span></span> <span data-ttu-id="e04b9-150">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-150">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-151">此属性的类型为<b>uInteger</b> <b>OLE_COLOR值</b>中的 uint (<b>uint</b> C#) 类型。</span><span class="sxs-lookup"><span data-stu-id="e04b9-151">This property is of the type <b>OLE_COLOR</b> which is a <b>UInteger</b> (<b>uint</b> in C#) value.</span></span> <span data-ttu-id="e04b9-152">此属性的默认值是 0x80000008，"窗口型"。</span><span class="sxs-lookup"><span data-stu-id="e04b9-152">The default value for this property is 0x80000008, "Window Text."</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public string GetItem (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetItem([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItem(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e04b9-153">从零开始计数的值，指定项目在列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="e04b9-153">A zero-based value that specifies the location of an item in the list.</span></span></param>
        <summary><span data-ttu-id="e04b9-154">获取<b>一 (</b><b>字符串</b>C#) ，该字符串代表组合框控件列表中指定位置处的项目。</span><span class="sxs-lookup"><span data-stu-id="e04b9-154">Obtains a <b>String</b> (<b>string</b> in C#) that represents an item at the specified location in the list of the combo box control.</span></span></summary>
        <returns><span data-ttu-id="e04b9-155">字符串<b> (</b><b>字符串</b>C#) 值，表示列表中指定位置处的项目。</span><span class="sxs-lookup"><span data-stu-id="e04b9-155">A <b>String</b> (<b>string</b> in C#) value that represents the item at the specified location in the list.</span></span></returns>
        <remarks><para><span data-ttu-id="e04b9-156">如果 <paramref name="Index" /> 超出允许值的范围， (介于 0 和 -1) ，则返回一个超出边界 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" /> 错误。</span><span class="sxs-lookup"><span data-stu-id="e04b9-156">If <paramref name="Index" /> is outside the range of the allowed values (between zero and <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" />-1), then an out-of-bounds  error will be returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-157">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) 指定控件失去焦点时是显示还是隐藏所选内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-157">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies if a selection is displayed or hidden for the control when the control loses focus.</span></span>  <span data-ttu-id="e04b9-158">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-158">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-p117">此属性的默认值为 <b>True</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p117">The default value of this property is <b>True</b>. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListCount">
      <MemberSignature Language="C#" Value="public int ListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-160">返回一<b> (</b>整数C#) 整数值<b></b>，该值指定组合框控件的下拉列表中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e04b9-160">Returns an <b>Integer</b> (<b>int</b> in C#) value that specifies the number of elements in the drop-down list of the combo box control.</span></span> <span data-ttu-id="e04b9-161">只读。</span><span class="sxs-lookup"><span data-stu-id="e04b9-161">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-162">默认值为零，表示列表中没有项目。</span><span class="sxs-lookup"><span data-stu-id="e04b9-162">The default value is zero, indicating that there are no items in the list.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListIndex">
      <MemberSignature Language="C#" Value="public int ListIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ListIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-163">返回或<b>设置一 (</b>整数C#) 整数<b></b>值，该值指示当前所选元素在组合框控件列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="e04b9-163">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value that indicates the location of the currently selected element in the list of the combo box control.</span></span> <span data-ttu-id="e04b9-164">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-164">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-165">
            <b>ListIndex</b> 是值列表中的项的数组的索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="e04b9-165">
            <b>ListIndex</b> is a zero-based value indexing into the array of items in the list.</span></span>  <span data-ttu-id="e04b9-166">默认值为-1，表示未选择任何项。</span><span class="sxs-lookup"><span data-stu-id="e04b9-166">The default value is -1, indicating that no item is selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-167">返回或设置一 <b>个 boolean</b> (<b>bool</b> C#) ，用于指定控件是否被锁定，不能更改。</span><span class="sxs-lookup"><span data-stu-id="e04b9-167">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether or not the control is locked from being changed.</span></span>  <span data-ttu-id="e04b9-168">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-168">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-169">默认值为 <b>False</b>。</span><span class="sxs-lookup"><span data-stu-id="e04b9-169">The default value is <b>False</b>.</span></span></para>
          <para><span data-ttu-id="e04b9-p122">当控件处于锁定状态时，该控件不具有“禁用”外观，但是用户不能编辑控件中的内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p122">When the control is locked, the control does not have  a "disabled" appearance, but the user cannot edit the contents of the control.  </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-171">返回或设置 <b>一</b> (<b>整数C#) 整数</b> 值，该值指定此控件的最大 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> 字符数。</span><span class="sxs-lookup"><span data-stu-id="e04b9-171">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value that specifies the maximum number of characters for the <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> of this control.</span></span>  <span data-ttu-id="e04b9-172">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-172">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-p124">默认值为零，仅表示还没有为此控件定义该值的最大长度。最大长度仍可根据可用内存或其他因素设置。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p124">The default value is zero, which only means that no maximum length for the value has been defined for this control. A maximum length may still be in place based on available memory or other factors.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseIcon">
      <MemberSignature Language="C#" Value="public stdole.StdPicture MouseIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class stdole.StdPicture MouseIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MouseIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseIcon As StdPicture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property stdole::StdPicture ^ MouseIcon { stdole::StdPicture ^ get(); void set(stdole::StdPicture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>stdole.StdPicture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-p125">返回或设置 <b>StdPicture</b> 表示此控件的鼠标光标的自定义图片。读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p125">Returns or sets a <b>StdPicture</b> that represents a custom picture to the mouse cursor for this control. Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-177">默认值为<b>Nothing</b> (空引用 (Nothing Visual Basic) in C#) 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-177">The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePointer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlMousePointer MousePointer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MousePointer" />
      <MemberSignature Language="VB.NET" Value="Public Property MousePointer As OlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlMousePointer MousePointer { Microsoft::Office::Interop::Outlook::OlMousePointer get(); void set(Microsoft::Office::Interop::Outlook::OlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-178">返回或设置一个常量，该常量指定当用户将鼠标放在控件上时 <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> 显示的指针类型。</span><span class="sxs-lookup"><span data-stu-id="e04b9-178">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlMousePointer" /> constant that specifies the type of pointer displayed when the user positions the mouse over the control.</span></span>  <span data-ttu-id="e04b9-179">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-179">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-180">默认值是 <b>olMousePointerDefault</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-180">The default value is <b>olMousePointerDefault</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e04b9-181">将剪贴板的内容粘贴到控件中。</span><span class="sxs-lookup"><span data-stu-id="e04b9-181">Pastes the contents of the clipboard in the control.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-182">以无格式文本格式粘贴剪贴板的内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-182">The contents of the clipboard are pasted in unformatted text.</span></span></para>
          <para><span data-ttu-id="e04b9-183">当控件为 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Style" /> <b>olComboBoxStyleListBox 时，此方法不粘贴任何内容</b>。</span><span class="sxs-lookup"><span data-stu-id="e04b9-183">This method does not paste anything when the control's <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Style" /> is <b>olComboBoxStyleListBox</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItem(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-555)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e04b9-184">编入列表中项目数组的索引的值，从零开始计数。</span><span class="sxs-lookup"><span data-stu-id="e04b9-184">A zero-based value indexing into the array of items in the list.</span></span></param>
        <summary><span data-ttu-id="e04b9-185">从列表中删除指定的项目。</span><span class="sxs-lookup"><span data-stu-id="e04b9-185">Removes the specified item from the list.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-186">如果 <paramref name="Index" /> 超出允许值的范围， (介于 0 和 -1) ，则返回一个超出边界 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" /> 错误。</span><span class="sxs-lookup"><span data-stu-id="e04b9-186">If <paramref name="Index" /> is outside the range of the allowed values (between zero and <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.ListCount" />-1), then an out-of-bounds error will be returned.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMargin">
      <MemberSignature Language="C#" Value="public bool SelectionMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionMargin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelectionMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMargin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionMargin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-187">返回或设置一个 <b>boolean</b> (<b>bool</b> C#) in C#) ，指定用户是否可以通过单击文本左侧的区域来选择一行文本。</span><span class="sxs-lookup"><span data-stu-id="e04b9-187">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether the user can select a line of text by clicking in the region to the left of the text.</span></span>   <span data-ttu-id="e04b9-188">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-188">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-189">如果 <b>True</b> ，在页边单击会选择文本。</span><span class="sxs-lookup"><span data-stu-id="e04b9-189">If <b>True</b>, clicking in the margin causes selection of text.</span></span>  <span data-ttu-id="e04b9-190">如果是 <b>False</b> ，此操作不会选择任何文本。</span><span class="sxs-lookup"><span data-stu-id="e04b9-190">If <b>False</b>, this action does not select any text.</span></span> <span data-ttu-id="e04b9-191">默认值为 <b>False</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-191">The default value is <b>False</b>.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelLength">
      <MemberSignature Language="C#" Value="public int SelLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-192">返回或设置 <b>一</b> (<b>整数C#) 整数</b> 值，该值指定当前所选内容中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e04b9-192">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value that specifies the number of characters in the current selection.</span></span>  <span data-ttu-id="e04b9-193">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-193">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-194">当前所选内容由 指定 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" /> ，这是控件的 一部分 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-194">The current selection is specified by <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" />, which is a portion of the control's <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" />.</span></span> <span data-ttu-id="e04b9-195">Value 可支持 <b>的最大字符数</b> 为 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-195">The maximum number of characters that can be supported for <b>Value</b> is <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" />.</span></span></para>
          <para><span data-ttu-id="e04b9-p132">默认值为零，表示当前没有选择文本。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p132">The default value is zero, which means no text is currently selected. </span></span></para>
          <para><span data-ttu-id="e04b9-197">甚至当控件不具有焦点时，将一直有效， <b>SelLength</b> 属性。</span><span class="sxs-lookup"><span data-stu-id="e04b9-197">The <b>SelLength</b> property is always valid, even when the control does not have focus.</span></span></para>
          <para><span data-ttu-id="e04b9-198">将 <b>SelLength</b> 设置为一个值小于零会出现错误。</span><span class="sxs-lookup"><span data-stu-id="e04b9-198">Setting <b>SelLength</b> to a value less than zero causes an error.</span></span>   <span data-ttu-id="e04b9-199">试图设置中将 <b>SelLength</b> 设置为 <b>MaxLength</b> <b>MaxLength</b> 结果大于的值。</span><span class="sxs-lookup"><span data-stu-id="e04b9-199">Attempting to set the value greater than <b>MaxLength</b> results in setting <b>SelLength</b> to <b>MaxLength</b>.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelStart">
      <MemberSignature Language="C#" Value="public int SelStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-200">返回或<b>设置一 (</b>整数C#) 整数<b></b>值，该值指定所选文本的起始点或插入点（如果未选择任何文本）。</span><span class="sxs-lookup"><span data-stu-id="e04b9-200">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value that specifies either  the starting point of the selected text or the insertion point if no text has been selected.</span></span>    <span data-ttu-id="e04b9-201">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-201">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-202">当前所选内容由 指定 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" /> ，这是控件的 一部分 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-202">The current selection is specified by <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" />, which is a portion of the control's <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" />.</span></span> <span data-ttu-id="e04b9-203">Value 可支持 <b>的最大字符数</b> 为 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-203">The maximum number of characters that can be supported for <b>Value</b> is <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" />.</span></span></para>
          <para><span data-ttu-id="e04b9-204">默认值为零，表示没有选择文本并且插入点位于开头。</span><span class="sxs-lookup"><span data-stu-id="e04b9-204">The default value is zero, which means no text is selected and the insertion point is at the beginning.</span></span></para>
          <para><span data-ttu-id="e04b9-205"><b>SelStart</b> 属性是始终有效，即使该控件不具有焦点。</span><span class="sxs-lookup"><span data-stu-id="e04b9-205">The <b>SelStart</b> property is always valid, even when the control does not have focus.</span></span>  <span data-ttu-id="e04b9-206">将 <b>SelStart</b> 设置为一个值小于零会出现错误。</span><span class="sxs-lookup"><span data-stu-id="e04b9-206">Setting <b>SelStart</b> to a value less than zero causes an error.</span></span>  <span data-ttu-id="e04b9-207">将 <b>SelStart</b> 设置为一个值大于 <b>MaxLength</b> 将 <b>SelStart</b> 重置为 <b>MaxLength</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-207">Setting <b>SelStart</b> to a value greater than <b>MaxLength</b> will reset <b>SelStart</b> to <b>MaxLength</b>.</span></span>  <span data-ttu-id="e04b9-208">更改值 <b>SelStart</b> 的取消任何现有内容，将插入点放在文本中，并将 <b>SelLength</b> 属性设置为零。</span><span class="sxs-lookup"><span data-stu-id="e04b9-208">Changing the value of <b>SelStart</b> cancels any existing selection, places the insertion point in the text, and sets the <b>SelLength</b> property to zero.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelText">
      <MemberSignature Language="C#" Value="public string SelText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.SelText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-209">返回一<b> (</b><b>字符串</b>C#) ，该字符串表示组合框的值的选定部分。</span><span class="sxs-lookup"><span data-stu-id="e04b9-209">Returns a <b>String</b> (<b>string</b> in C#) that represents the selected portion of the value of the combo box.</span></span>    <span data-ttu-id="e04b9-210">只读。</span><span class="sxs-lookup"><span data-stu-id="e04b9-210">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-211">
            <b>SelText</b> 表示当前所选内容，它是控件的 一部分 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-211">
            <b>SelText</b> represents the current selection, which is a portion of the control's <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" />.</span></span> <span data-ttu-id="e04b9-212">Value 可支持 <b>的最大字符数</b> 为 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" /> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-212">The maximum number of characters that can be supported for <b>Value</b> is <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.MaxLength" />.</span></span></para>
          <para><span data-ttu-id="e04b9-213">默认值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e04b9-213">The default value is an empty string.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int Index, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem([in]int32 Index, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._OlkComboBox.SetItem(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (Index As Integer, Item As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int Index, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64478)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e04b9-214">从零开始计数的值，指定项目在列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="e04b9-214">A zero-based value that specifies the location of an item in the list.</span></span></param>
        <param name="Item"><span data-ttu-id="e04b9-215">要用于更新列表中指定位置的值。</span><span class="sxs-lookup"><span data-stu-id="e04b9-215">The value to be used to update the list at the specified location.</span></span></param>
        <summary><span data-ttu-id="e04b9-216">将组合框列表中指定位置处的项目设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="e04b9-216">Sets the item at the specified location in the list of the combo box to the specified value.</span></span></summary>
        <remarks><para><span data-ttu-id="e04b9-217">如果 <paramref name="Index" /> 超出允许值的范围， (介于 0 和 -1) ，则返回一个超出边界 <see cref="P:Microsoft.Office.Interop.Outlook._OlkListBox.ListCount" /> 错误。</span><span class="sxs-lookup"><span data-stu-id="e04b9-217">If <paramref name="Index" /> is outside the range of the allowed values (between zero and <see cref="P:Microsoft.Office.Interop.Outlook._OlkListBox.ListCount" />-1), then an out-of-bounds error will be returned.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlComboBoxStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlComboBoxStyle Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As OlComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlComboBoxStyle Style { Microsoft::Office::Interop::Outlook::OlComboBoxStyle get(); void set(Microsoft::Office::Interop::Outlook::OlComboBoxStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-218">返回或设置 <see cref="T:Microsoft.Office.Interop.Outlook.OlComboBoxStyle" /> 一个常量，用于指定用户如何选择或设置控件的值。</span><span class="sxs-lookup"><span data-stu-id="e04b9-218">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlComboBoxStyle" /> constant to specify how the user can choose or set the control's value.</span></span>  <span data-ttu-id="e04b9-219">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-219">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-p141">默认值是 <b>olComboBoxStyleCombo</b> 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p141">The default value is <b>olComboBoxStyleCombo</b>. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-221">返回或<b>设置一 (</b><b>字符串</b>C#) 控件中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="e04b9-221">Returns or sets a <b>String</b> (<b>string</b> in C#) that is the text displayed in the control.</span></span> <span data-ttu-id="e04b9-222">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-222">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-223"><b>文本</b> 属性的默认值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e04b9-223">The default value of the <b>Text</b> property is the empty string.</span></span></para>
          <para><span data-ttu-id="e04b9-224"><b>Text</b>属性提供与属性相同的值，但该值强键入为字符串 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> 字符串 (<b></b><b>字符串</b>C#) 。</span><span class="sxs-lookup"><span data-stu-id="e04b9-224">The <b>Text</b> property provides the same value as the <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" /> property, but the value is strongly typed as a <b>String</b> (<b>string</b> in C#).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlTextAlign TextAlign" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As OlTextAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlTextAlign TextAlign { Microsoft::Office::Interop::Outlook::OlTextAlign get(); void set(Microsoft::Office::Interop::Outlook::OlTextAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10004)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlTextAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-225">返回或设置 <see cref="T:Microsoft.Office.Interop.Outlook.OlTextAlign" /> 一个常量，该常量指定控件中文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="e04b9-225">Returns or sets an <see cref="T:Microsoft.Office.Interop.Outlook.OlTextAlign" /> constant that specifies how text is aligned in the control.</span></span>  <span data-ttu-id="e04b9-226">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-226">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-227">默认值是 <b>olTextAlignLeft</b> 中与英语等从左到右语言。</span><span class="sxs-lookup"><span data-stu-id="e04b9-227">The default value is <b>olTextAlignLeft</b> in left-to-right languages such as English.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TopIndex">
      <MemberSignature Language="C#" Value="public int TopIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.TopIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TopIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TopIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-228">返回或 <b>设置整数</b> (<b>int</b> C#) 值，表示在组合框中列表的显示部分顶部的项目的索引。</span><span class="sxs-lookup"><span data-stu-id="e04b9-228">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value that represents the index of the item at the top of the displayed portion of the list in the combo box.</span></span> <span data-ttu-id="e04b9-229">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-229">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-230">当列表滚动时，列表顶端的项目会更改，此属性的值也会随之更改以反映当前显示在列表顶端的项目。</span><span class="sxs-lookup"><span data-stu-id="e04b9-230">As the list scrolls, the item at the top of the list will change, and the value of this property will change to reflect the item currently displayed at the top of the list.</span></span></para>
          <para><span data-ttu-id="e04b9-p145">索引值是从零开始的。默认值为 -1，表示不应用特殊的排序。</span><span class="sxs-lookup"><span data-stu-id="e04b9-p145">The index value is zero-based. The default value is -1, indicating that no special ordering should be applied.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Value" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e04b9-233">返回或设置 <b>一个对象</b> ，表示控件显示的列表中选择的内容。</span><span class="sxs-lookup"><span data-stu-id="e04b9-233">Returns or sets an <b>Object</b> that represents the content selected in the list displayed by the control.</span></span> <span data-ttu-id="e04b9-234">读/写。</span><span class="sxs-lookup"><span data-stu-id="e04b9-234">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e04b9-235">该值与 的值相同，只是此属性为 <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Text" /> <b></b><b>Object，Text</b>在 C#) <b></b>中强类型为<b>String</b> (string。</span><span class="sxs-lookup"><span data-stu-id="e04b9-235">The value is the same as the value of  <see cref="P:Microsoft.Office.Interop.Outlook._OlkComboBox.Text" />, except that this property is <b>Object</b> and <b>Text</b> is strongly typed as <b>String</b> (<b>string</b> in C#).</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
